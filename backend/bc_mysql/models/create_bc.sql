
use tfg;
drop table if exists T_BC_BLOCK;
create table T_BC_BLOCK
(
  	LOG_UUID         	VARCHAR(64)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	
	HASH_BLOCK    		VARCHAR(128)  NOT NULL COMMENT '区块HASH',
	HASH_MERKLE_ROOT    VARCHAR(128)  NOT NULL COMMENT 'MTREE',
    
    HASH_PREV_BLOCK    	VARCHAR(128)  NOT NULL COMMENT '区块HASH',
	HASH_PREV_MERKLE_ROOT     VARCHAR(128)  NOT NULL COMMENT 'MTREE',
    
    BLOCK_HEIGHT        DECIMAL(24,0)  NOT NULL COMMENT '当前区块高度',
	TXN_COUNT			INT		DEFAULT 0 comment '事务个数',
    
	EXT_COMMENTS			VARCHAR(1024)  COMMENT '扩展信息',

	BLOCK_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (LOG_UUID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8 ;
create index T_BC_BLOCKCHAIN_HASH_BLOCK on T_BC_BLOCK
(
   HASH_BLOCK
);
create index T_BC_BLOCKCHAIN_BLOCK_HEIGHT on T_BC_BLOCK
(
   BLOCK_HEIGHT
);

drop table if exists T_BC_BLOCK_MPT;
create table T_BC_BLOCK_MPT
(
  	LOG_UUID         	VARCHAR(64)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	BLOCK_HEIGHT        DECIMAL(24,0)  NOT NULL COMMENT '当前区块高度',

	HASH_MPT    		VARCHAR(128)  NOT NULL COMMENT 'MPT_HASH',
	HASH_PREV_MPT    VARCHAR(128)  NOT NULL COMMENT '上一个hash值',
    
    MPT_TYPE			VARCHAR(8) default '0000'COMMENT '树的类别',
    
	V_COUNTS			INT		DEFAULT 0 comment 'value的数值',
    
	BLOCK_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (LOG_UUID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8 ;
create index T_BC_BLOCK_MPT_BLOCK_HEIGHT on T_BC_BLOCK_MPT
(
   BLOCK_HEIGHT
);
create index T_BC_BLOCK_MPT_HASH_MPT on T_BC_BLOCK_MPT
(
   HASH_MPT
);

drop table if exists T_BC_GLOBAL_PROPS;
create table T_BC_GLOBAL_PROPS
(
  	LOG_UUID         	VARCHAR(64)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本（末尾为共识算法：N-没有，P-bft，O-PoS算法，R-Raft',
	BLOCK_HEIGHT        DECIMAL(24,0)  NOT NULL COMMENT '所在的区块高度',

	PROP_KEY    		VARCHAR(128)  NOT NULL COMMENT 'HashKey值',
	PROP_VALUE    		VARCHAR(512)  NOT NULL COMMENT '属性值',
	MPT_TYPE			VARCHAR(8) default '0000'COMMENT '树的类别',
	
	HASH_VALUE    		VARCHAR(128)  NOT NULL COMMENT '属性值',
	TXID				VARCHAR(128)  NOT NULL COMMENT '所在的txid为止',
	PREV_HASH_VALUE    	VARCHAR(128)  NOT NULL COMMENT '属性值',
    PREV_BLOCK_HEIGHT      DECIMAL(24,0)  NOT NULL COMMENT '上次修改的所在的区块高度',

	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (LOG_UUID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8 ;
create index T_BC_GLOBAL_PROPS_BLOCK_HEIGHT on T_BC_GLOBAL_PROPS
(
   BLOCK_HEIGHT
);
create index T_BC_GLOBAL_PROPS_PROP_KEY on T_BC_GLOBAL_PROPS
(
   PROP_KEY
);
create index T_BC_GLOBAL_PROPS_TXID on T_BC_GLOBAL_PROPS
(
   TXID
);
create index T_BC_GLOBAL_PREV_HASH_VALUE on T_BC_GLOBAL_PROPS
(
   PREV_HASH_VALUE
);


drop table if exists T_BC_TRADE;
drop table if exists T_BC_TRANSACTON;

create table T_BC_TRANSACTON
(
  	TXID         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	HASH_MERKLE_ROOT    VARCHAR(128)  NOT NULL COMMENT 'MTREE',
	BLOCK_HEIGHT        DECIMAL(24,0)  NOT NULL COMMENT '当前区块高度',
	ADDRESS_IN_COUNT			INT		DEFAULT 0 comment '地址个数',
	ADDRESS_OUT_COUNT			INT		DEFAULT 0 comment '事务个数',
	PROP_COUNT			INT		DEFAULT 0 comment '属性',
				

	TX_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	INDEX_IN_BLOCK		int DEFAULT 0 COMMENT '处于区块的位置',
	EXT_COMMENTS		VARCHAR(1024)  COMMENT '扩展信息',    
    
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (TXID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index T_T_BC_TRANSACTON_BLOCK_ID on T_BC_TRANSACTON
(
   HASH_MERKLE_ROOT
);
drop table if exists T_BC_TRANSACTON_ADDRESS;
drop table if exists T_BC_ADDRESS;
create table T_BC_ADDRESS
(
  	LOG_UUID         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
  	ADDRESS			VARCHAR(128)  NOT NULL COMMENT '地址',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	TXID         	VARCHAR(128)  NOT NULL COMMENT 'txid',
    PREV_TXID         	VARCHAR(128)  NOT NULL COMMENT '上个交易的txid',
    INDEX_IN_TX		int DEFAULT 0 COMMENT '处于交易的位置',
    ADDR_TYPE		CHAR(2) COMMENT 'I:输入,O:输出,C:合约,P:属性,A:地址',
    NEXT_SCRIPT_ID 		VARCHAR(128)  COMMENT '对应合约的ID',
    SVALUE			decimal(24,8) COMMENT '资金',
    FEE				decimal(24,8) COMMENT '交易费',
    TAX				decimal(24,8) COMMENT '税费',
	EXT_COMMENTS		VARCHAR(1024)  COMMENT '附言扩展信息',    
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (TXID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index T_BC_TRANSACTON_TXID on T_BC_TRANSACTON_ADDRESS
(
   TXID
);
create index T_T_BC_TRANSACTON_ADDRESS on T_BC_TRANSACTON_ADDRESS
(
   ADDRESS
);
