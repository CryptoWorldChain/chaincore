// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p22p.proto

package org.fc.brewchain.p22p.pbgens;

public final class P22P {
  private P22P() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.fc.brewchain.p22p.pbgens.PModule}
   */
  public enum PModule
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PZP = 0;</code>
     */
    PZP(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PZP = 0;</code>
     */
    public static final int PZP_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PModule valueOf(int value) {
      return forNumber(value);
    }

    public static PModule forNumber(int value) {
      switch (value) {
        case 0: return PZP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PModule>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PModule> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PModule>() {
            public PModule findValueByNumber(int number) {
              return PModule.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.getDescriptor().getEnumTypes().get(0);
    }

    private static final PModule[] VALUES = values();

    public static PModule valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PModule(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.fc.brewchain.p22p.pbgens.PModule)
  }

  /**
   * Protobuf enum {@code org.fc.brewchain.p22p.pbgens.PCommand}
   */
  public enum PCommand
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *申请加入节点集群
     * </pre>
     *
     * <code>JIN = 0;</code>
     */
    JIN(0),
    /**
     * <pre>
     *获取节点的拓扑
     * </pre>
     *
     * <code>SWX = 1;</code>
     */
    SWX(1),
    /**
     * <pre>
     *更新节点信息
     * </pre>
     *
     * <code>SET = 2;</code>
     */
    SET(2),
    /**
     * <pre>
     *获取当前节点信息
     * </pre>
     *
     * <code>INF = 3;</code>
     */
    INF(3),
    /**
     * <pre>
     *PBFT投票
     * </pre>
     *
     * <code>VOT = 4;</code>
     */
    VOT(4),
    /**
     * <pre>
     *HeartBeat!检查心跳
     * </pre>
     *
     * <code>HBT = 10;</code>
     */
    HBT(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *申请加入节点集群
     * </pre>
     *
     * <code>JIN = 0;</code>
     */
    public static final int JIN_VALUE = 0;
    /**
     * <pre>
     *获取节点的拓扑
     * </pre>
     *
     * <code>SWX = 1;</code>
     */
    public static final int SWX_VALUE = 1;
    /**
     * <pre>
     *更新节点信息
     * </pre>
     *
     * <code>SET = 2;</code>
     */
    public static final int SET_VALUE = 2;
    /**
     * <pre>
     *获取当前节点信息
     * </pre>
     *
     * <code>INF = 3;</code>
     */
    public static final int INF_VALUE = 3;
    /**
     * <pre>
     *PBFT投票
     * </pre>
     *
     * <code>VOT = 4;</code>
     */
    public static final int VOT_VALUE = 4;
    /**
     * <pre>
     *HeartBeat!检查心跳
     * </pre>
     *
     * <code>HBT = 10;</code>
     */
    public static final int HBT_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PCommand valueOf(int value) {
      return forNumber(value);
    }

    public static PCommand forNumber(int value) {
      switch (value) {
        case 0: return JIN;
        case 1: return SWX;
        case 2: return SET;
        case 3: return INF;
        case 4: return VOT;
        case 10: return HBT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PCommand>() {
            public PCommand findValueByNumber(int number) {
              return PCommand.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.getDescriptor().getEnumTypes().get(1);
    }

    private static final PCommand[] VALUES = values();

    public static PCommand valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.fc.brewchain.p22p.pbgens.PCommand)
  }

  /**
   * Protobuf enum {@code org.fc.brewchain.p22p.pbgens.PBFTStage}
   */
  public enum PBFTStage
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRE_PREPARE = 0;</code>
     */
    PRE_PREPARE(0),
    /**
     * <code>PREPARE = 1;</code>
     */
    PREPARE(1),
    /**
     * <code>COMMIT = 2;</code>
     */
    COMMIT(2),
    /**
     * <code>REPLY = 3;</code>
     */
    REPLY(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PRE_PREPARE = 0;</code>
     */
    public static final int PRE_PREPARE_VALUE = 0;
    /**
     * <code>PREPARE = 1;</code>
     */
    public static final int PREPARE_VALUE = 1;
    /**
     * <code>COMMIT = 2;</code>
     */
    public static final int COMMIT_VALUE = 2;
    /**
     * <code>REPLY = 3;</code>
     */
    public static final int REPLY_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PBFTStage valueOf(int value) {
      return forNumber(value);
    }

    public static PBFTStage forNumber(int value) {
      switch (value) {
        case 0: return PRE_PREPARE;
        case 1: return PREPARE;
        case 2: return COMMIT;
        case 3: return REPLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PBFTStage>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PBFTStage> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PBFTStage>() {
            public PBFTStage findValueByNumber(int number) {
              return PBFTStage.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.getDescriptor().getEnumTypes().get(2);
    }

    private static final PBFTStage[] VALUES = values();

    public static PBFTStage valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PBFTStage(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.fc.brewchain.p22p.pbgens.PBFTStage)
  }

  public interface PMNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.brewchain.p22p.pbgens.PMNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *节点
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    java.lang.String getNodeName();
    /**
     * <pre>
     *节点
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeNameBytes();

    /**
     * <pre>
     *节点链接支持的协议类型，tcp，http/https，udp，mq……
     * </pre>
     *
     * <code>string protocol = 2;</code>
     */
    java.lang.String getProtocol();
    /**
     * <pre>
     *节点链接支持的协议类型，tcp，http/https，udp，mq……
     * </pre>
     *
     * <code>string protocol = 2;</code>
     */
    com.google.protobuf.ByteString
        getProtocolBytes();

    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>string address = 3;</code>
     */
    java.lang.String getAddress();
    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>string address = 3;</code>
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <pre>
     *端口
     * </pre>
     *
     * <code>int32 port = 4;</code>
     */
    int getPort();

    /**
     * <pre>
     *启动时间
     * </pre>
     *
     * <code>int64 startup_time = 5;</code>
     */
    long getStartupTime();

    /**
     * <pre>
     *该节点的公钥
     * </pre>
     *
     * <code>string pub_key = 6;</code>
     */
    java.lang.String getPubKey();
    /**
     * <pre>
     *该节点的公钥
     * </pre>
     *
     * <code>string pub_key = 6;</code>
     */
    com.google.protobuf.ByteString
        getPubKeyBytes();

    /**
     * <pre>
     *节点的唯一ID
     * </pre>
     *
     * <code>string bcuid = 7;</code>
     */
    java.lang.String getBcuid();
    /**
     * <pre>
     *节点的唯一ID
     * </pre>
     *
     * <code>string bcuid = 7;</code>
     */
    com.google.protobuf.ByteString
        getBcuidBytes();

    /**
     * <pre>
     *节点的随机id
     * </pre>
     *
     * <code>int32 try_node_idx = 8;</code>
     */
    int getTryNodeIdx();

    /**
     * <pre>
     *私钥，记得不要再在全网广播
     * </pre>
     *
     * <code>string pri_key = 9;</code>
     */
    java.lang.String getPriKey();
    /**
     * <pre>
     *私钥，记得不要再在全网广播
     * </pre>
     *
     * <code>string pri_key = 9;</code>
     */
    com.google.protobuf.ByteString
        getPriKeyBytes();

    /**
     * <pre>
     *全网确定之后的节点id
     * </pre>
     *
     * <code>int32 node_idx = 10;</code>
     */
    int getNodeIdx();

    /**
     * <pre>
     *总收到多少数据
     * </pre>
     *
     * <code>int64 recv_cc = 11;</code>
     */
    long getRecvCc();

    /**
     * <pre>
     *总发送多少数据
     * </pre>
     *
     * <code>int64 send_cc = 12;</code>
     */
    long getSendCc();

    /**
     * <pre>
     *总产生了多少个区块！
     * </pre>
     *
     * <code>int64 block_cc = 13;</code>
     */
    long getBlockCc();

    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    java.lang.String getSign();
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    com.google.protobuf.ByteString
        getSignBytes();
  }
  /**
   * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PMNodeInfo}
   */
  public  static final class PMNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.brewchain.p22p.pbgens.PMNodeInfo)
      PMNodeInfoOrBuilder {
    // Use PMNodeInfo.newBuilder() to construct.
    private PMNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PMNodeInfo() {
      nodeName_ = "";
      protocol_ = "";
      address_ = "";
      port_ = 0;
      startupTime_ = 0L;
      pubKey_ = "";
      bcuid_ = "";
      tryNodeIdx_ = 0;
      priKey_ = "";
      nodeIdx_ = 0;
      recvCc_ = 0L;
      sendCc_ = 0L;
      blockCc_ = 0L;
      sign_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PMNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              protocol_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              address_ = s;
              break;
            }
            case 32: {

              port_ = input.readInt32();
              break;
            }
            case 40: {

              startupTime_ = input.readInt64();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              pubKey_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              bcuid_ = s;
              break;
            }
            case 64: {

              tryNodeIdx_ = input.readInt32();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              priKey_ = s;
              break;
            }
            case 80: {

              nodeIdx_ = input.readInt32();
              break;
            }
            case 88: {

              recvCc_ = input.readInt64();
              break;
            }
            case 96: {

              sendCc_ = input.readInt64();
              break;
            }
            case 104: {

              blockCc_ = input.readInt64();
              break;
            }
            case 802: {
              java.lang.String s = input.readStringRequireUtf8();

              sign_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.class, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder.class);
    }

    public static final int NODE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeName_;
    /**
     * <pre>
     *节点
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    public java.lang.String getNodeName() {
      java.lang.Object ref = nodeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeNameBytes() {
      java.lang.Object ref = nodeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROTOCOL_FIELD_NUMBER = 2;
    private volatile java.lang.Object protocol_;
    /**
     * <pre>
     *节点链接支持的协议类型，tcp，http/https，udp，mq……
     * </pre>
     *
     * <code>string protocol = 2;</code>
     */
    public java.lang.String getProtocol() {
      java.lang.Object ref = protocol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        protocol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点链接支持的协议类型，tcp，http/https，udp，mq……
     * </pre>
     *
     * <code>string protocol = 2;</code>
     */
    public com.google.protobuf.ByteString
        getProtocolBytes() {
      java.lang.Object ref = protocol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protocol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDRESS_FIELD_NUMBER = 3;
    private volatile java.lang.Object address_;
    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>string address = 3;</code>
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>string address = 3;</code>
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private int port_;
    /**
     * <pre>
     *端口
     * </pre>
     *
     * <code>int32 port = 4;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int STARTUP_TIME_FIELD_NUMBER = 5;
    private long startupTime_;
    /**
     * <pre>
     *启动时间
     * </pre>
     *
     * <code>int64 startup_time = 5;</code>
     */
    public long getStartupTime() {
      return startupTime_;
    }

    public static final int PUB_KEY_FIELD_NUMBER = 6;
    private volatile java.lang.Object pubKey_;
    /**
     * <pre>
     *该节点的公钥
     * </pre>
     *
     * <code>string pub_key = 6;</code>
     */
    public java.lang.String getPubKey() {
      java.lang.Object ref = pubKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pubKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *该节点的公钥
     * </pre>
     *
     * <code>string pub_key = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPubKeyBytes() {
      java.lang.Object ref = pubKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pubKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BCUID_FIELD_NUMBER = 7;
    private volatile java.lang.Object bcuid_;
    /**
     * <pre>
     *节点的唯一ID
     * </pre>
     *
     * <code>string bcuid = 7;</code>
     */
    public java.lang.String getBcuid() {
      java.lang.Object ref = bcuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bcuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点的唯一ID
     * </pre>
     *
     * <code>string bcuid = 7;</code>
     */
    public com.google.protobuf.ByteString
        getBcuidBytes() {
      java.lang.Object ref = bcuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bcuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRY_NODE_IDX_FIELD_NUMBER = 8;
    private int tryNodeIdx_;
    /**
     * <pre>
     *节点的随机id
     * </pre>
     *
     * <code>int32 try_node_idx = 8;</code>
     */
    public int getTryNodeIdx() {
      return tryNodeIdx_;
    }

    public static final int PRI_KEY_FIELD_NUMBER = 9;
    private volatile java.lang.Object priKey_;
    /**
     * <pre>
     *私钥，记得不要再在全网广播
     * </pre>
     *
     * <code>string pri_key = 9;</code>
     */
    public java.lang.String getPriKey() {
      java.lang.Object ref = priKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        priKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *私钥，记得不要再在全网广播
     * </pre>
     *
     * <code>string pri_key = 9;</code>
     */
    public com.google.protobuf.ByteString
        getPriKeyBytes() {
      java.lang.Object ref = priKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        priKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_IDX_FIELD_NUMBER = 10;
    private int nodeIdx_;
    /**
     * <pre>
     *全网确定之后的节点id
     * </pre>
     *
     * <code>int32 node_idx = 10;</code>
     */
    public int getNodeIdx() {
      return nodeIdx_;
    }

    public static final int RECV_CC_FIELD_NUMBER = 11;
    private long recvCc_;
    /**
     * <pre>
     *总收到多少数据
     * </pre>
     *
     * <code>int64 recv_cc = 11;</code>
     */
    public long getRecvCc() {
      return recvCc_;
    }

    public static final int SEND_CC_FIELD_NUMBER = 12;
    private long sendCc_;
    /**
     * <pre>
     *总发送多少数据
     * </pre>
     *
     * <code>int64 send_cc = 12;</code>
     */
    public long getSendCc() {
      return sendCc_;
    }

    public static final int BLOCK_CC_FIELD_NUMBER = 13;
    private long blockCc_;
    /**
     * <pre>
     *总产生了多少个区块！
     * </pre>
     *
     * <code>int64 block_cc = 13;</code>
     */
    public long getBlockCc() {
      return blockCc_;
    }

    public static final int SIGN_FIELD_NUMBER = 100;
    private volatile java.lang.Object sign_;
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public java.lang.String getSign() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sign_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public com.google.protobuf.ByteString
        getSignBytes() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sign_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeName_);
      }
      if (!getProtocolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, protocol_);
      }
      if (!getAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, address_);
      }
      if (port_ != 0) {
        output.writeInt32(4, port_);
      }
      if (startupTime_ != 0L) {
        output.writeInt64(5, startupTime_);
      }
      if (!getPubKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, pubKey_);
      }
      if (!getBcuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, bcuid_);
      }
      if (tryNodeIdx_ != 0) {
        output.writeInt32(8, tryNodeIdx_);
      }
      if (!getPriKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, priKey_);
      }
      if (nodeIdx_ != 0) {
        output.writeInt32(10, nodeIdx_);
      }
      if (recvCc_ != 0L) {
        output.writeInt64(11, recvCc_);
      }
      if (sendCc_ != 0L) {
        output.writeInt64(12, sendCc_);
      }
      if (blockCc_ != 0L) {
        output.writeInt64(13, blockCc_);
      }
      if (!getSignBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 100, sign_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeName_);
      }
      if (!getProtocolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, protocol_);
      }
      if (!getAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, address_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (startupTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, startupTime_);
      }
      if (!getPubKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, pubKey_);
      }
      if (!getBcuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, bcuid_);
      }
      if (tryNodeIdx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, tryNodeIdx_);
      }
      if (!getPriKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, priKey_);
      }
      if (nodeIdx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, nodeIdx_);
      }
      if (recvCc_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, recvCc_);
      }
      if (sendCc_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, sendCc_);
      }
      if (blockCc_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, blockCc_);
      }
      if (!getSignBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(100, sign_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo)) {
        return super.equals(obj);
      }
      org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo other = (org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo) obj;

      boolean result = true;
      result = result && getNodeName()
          .equals(other.getNodeName());
      result = result && getProtocol()
          .equals(other.getProtocol());
      result = result && getAddress()
          .equals(other.getAddress());
      result = result && (getPort()
          == other.getPort());
      result = result && (getStartupTime()
          == other.getStartupTime());
      result = result && getPubKey()
          .equals(other.getPubKey());
      result = result && getBcuid()
          .equals(other.getBcuid());
      result = result && (getTryNodeIdx()
          == other.getTryNodeIdx());
      result = result && getPriKey()
          .equals(other.getPriKey());
      result = result && (getNodeIdx()
          == other.getNodeIdx());
      result = result && (getRecvCc()
          == other.getRecvCc());
      result = result && (getSendCc()
          == other.getSendCc());
      result = result && (getBlockCc()
          == other.getBlockCc());
      result = result && getSign()
          .equals(other.getSign());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getNodeName().hashCode();
      hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
      hash = (53 * hash) + getProtocol().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + STARTUP_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartupTime());
      hash = (37 * hash) + PUB_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPubKey().hashCode();
      hash = (37 * hash) + BCUID_FIELD_NUMBER;
      hash = (53 * hash) + getBcuid().hashCode();
      hash = (37 * hash) + TRY_NODE_IDX_FIELD_NUMBER;
      hash = (53 * hash) + getTryNodeIdx();
      hash = (37 * hash) + PRI_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPriKey().hashCode();
      hash = (37 * hash) + NODE_IDX_FIELD_NUMBER;
      hash = (53 * hash) + getNodeIdx();
      hash = (37 * hash) + RECV_CC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRecvCc());
      hash = (37 * hash) + SEND_CC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSendCc());
      hash = (37 * hash) + BLOCK_CC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockCc());
      hash = (37 * hash) + SIGN_FIELD_NUMBER;
      hash = (53 * hash) + getSign().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PMNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.brewchain.p22p.pbgens.PMNodeInfo)
        org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.class, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder.class);
      }

      // Construct using org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeName_ = "";

        protocol_ = "";

        address_ = "";

        port_ = 0;

        startupTime_ = 0L;

        pubKey_ = "";

        bcuid_ = "";

        tryNodeIdx_ = 0;

        priKey_ = "";

        nodeIdx_ = 0;

        recvCc_ = 0L;

        sendCc_ = 0L;

        blockCc_ = 0L;

        sign_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_descriptor;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getDefaultInstanceForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance();
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo build() {
        org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo buildPartial() {
        org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo result = new org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo(this);
        result.nodeName_ = nodeName_;
        result.protocol_ = protocol_;
        result.address_ = address_;
        result.port_ = port_;
        result.startupTime_ = startupTime_;
        result.pubKey_ = pubKey_;
        result.bcuid_ = bcuid_;
        result.tryNodeIdx_ = tryNodeIdx_;
        result.priKey_ = priKey_;
        result.nodeIdx_ = nodeIdx_;
        result.recvCc_ = recvCc_;
        result.sendCc_ = sendCc_;
        result.blockCc_ = blockCc_;
        result.sign_ = sign_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo) {
          return mergeFrom((org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo other) {
        if (other == org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance()) return this;
        if (!other.getNodeName().isEmpty()) {
          nodeName_ = other.nodeName_;
          onChanged();
        }
        if (!other.getProtocol().isEmpty()) {
          protocol_ = other.protocol_;
          onChanged();
        }
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.getStartupTime() != 0L) {
          setStartupTime(other.getStartupTime());
        }
        if (!other.getPubKey().isEmpty()) {
          pubKey_ = other.pubKey_;
          onChanged();
        }
        if (!other.getBcuid().isEmpty()) {
          bcuid_ = other.bcuid_;
          onChanged();
        }
        if (other.getTryNodeIdx() != 0) {
          setTryNodeIdx(other.getTryNodeIdx());
        }
        if (!other.getPriKey().isEmpty()) {
          priKey_ = other.priKey_;
          onChanged();
        }
        if (other.getNodeIdx() != 0) {
          setNodeIdx(other.getNodeIdx());
        }
        if (other.getRecvCc() != 0L) {
          setRecvCc(other.getRecvCc());
        }
        if (other.getSendCc() != 0L) {
          setSendCc(other.getSendCc());
        }
        if (other.getBlockCc() != 0L) {
          setBlockCc(other.getBlockCc());
        }
        if (!other.getSign().isEmpty()) {
          sign_ = other.sign_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object nodeName_ = "";
      /**
       * <pre>
       *节点
       * </pre>
       *
       * <code>string node_name = 1;</code>
       */
      public java.lang.String getNodeName() {
        java.lang.Object ref = nodeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *节点
       * </pre>
       *
       * <code>string node_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeNameBytes() {
        java.lang.Object ref = nodeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点
       * </pre>
       *
       * <code>string node_name = 1;</code>
       */
      public Builder setNodeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点
       * </pre>
       *
       * <code>string node_name = 1;</code>
       */
      public Builder clearNodeName() {
        
        nodeName_ = getDefaultInstance().getNodeName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点
       * </pre>
       *
       * <code>string node_name = 1;</code>
       */
      public Builder setNodeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object protocol_ = "";
      /**
       * <pre>
       *节点链接支持的协议类型，tcp，http/https，udp，mq……
       * </pre>
       *
       * <code>string protocol = 2;</code>
       */
      public java.lang.String getProtocol() {
        java.lang.Object ref = protocol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          protocol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *节点链接支持的协议类型，tcp，http/https，udp，mq……
       * </pre>
       *
       * <code>string protocol = 2;</code>
       */
      public com.google.protobuf.ByteString
          getProtocolBytes() {
        java.lang.Object ref = protocol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          protocol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点链接支持的协议类型，tcp，http/https，udp，mq……
       * </pre>
       *
       * <code>string protocol = 2;</code>
       */
      public Builder setProtocol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        protocol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点链接支持的协议类型，tcp，http/https，udp，mq……
       * </pre>
       *
       * <code>string protocol = 2;</code>
       */
      public Builder clearProtocol() {
        
        protocol_ = getDefaultInstance().getProtocol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点链接支持的协议类型，tcp，http/https，udp，mq……
       * </pre>
       *
       * <code>string protocol = 2;</code>
       */
      public Builder setProtocolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        protocol_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object address_ = "";
      /**
       * <pre>
       *地址
       * </pre>
       *
       * <code>string address = 3;</code>
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *地址
       * </pre>
       *
       * <code>string address = 3;</code>
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *地址
       * </pre>
       *
       * <code>string address = 3;</code>
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *地址
       * </pre>
       *
       * <code>string address = 3;</code>
       */
      public Builder clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *地址
       * </pre>
       *
       * <code>string address = 3;</code>
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        address_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       *端口
       * </pre>
       *
       * <code>int32 port = 4;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       *端口
       * </pre>
       *
       * <code>int32 port = 4;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *端口
       * </pre>
       *
       * <code>int32 port = 4;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private long startupTime_ ;
      /**
       * <pre>
       *启动时间
       * </pre>
       *
       * <code>int64 startup_time = 5;</code>
       */
      public long getStartupTime() {
        return startupTime_;
      }
      /**
       * <pre>
       *启动时间
       * </pre>
       *
       * <code>int64 startup_time = 5;</code>
       */
      public Builder setStartupTime(long value) {
        
        startupTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *启动时间
       * </pre>
       *
       * <code>int64 startup_time = 5;</code>
       */
      public Builder clearStartupTime() {
        
        startupTime_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object pubKey_ = "";
      /**
       * <pre>
       *该节点的公钥
       * </pre>
       *
       * <code>string pub_key = 6;</code>
       */
      public java.lang.String getPubKey() {
        java.lang.Object ref = pubKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pubKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *该节点的公钥
       * </pre>
       *
       * <code>string pub_key = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPubKeyBytes() {
        java.lang.Object ref = pubKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pubKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *该节点的公钥
       * </pre>
       *
       * <code>string pub_key = 6;</code>
       */
      public Builder setPubKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pubKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该节点的公钥
       * </pre>
       *
       * <code>string pub_key = 6;</code>
       */
      public Builder clearPubKey() {
        
        pubKey_ = getDefaultInstance().getPubKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该节点的公钥
       * </pre>
       *
       * <code>string pub_key = 6;</code>
       */
      public Builder setPubKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pubKey_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object bcuid_ = "";
      /**
       * <pre>
       *节点的唯一ID
       * </pre>
       *
       * <code>string bcuid = 7;</code>
       */
      public java.lang.String getBcuid() {
        java.lang.Object ref = bcuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bcuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *节点的唯一ID
       * </pre>
       *
       * <code>string bcuid = 7;</code>
       */
      public com.google.protobuf.ByteString
          getBcuidBytes() {
        java.lang.Object ref = bcuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bcuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点的唯一ID
       * </pre>
       *
       * <code>string bcuid = 7;</code>
       */
      public Builder setBcuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bcuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点的唯一ID
       * </pre>
       *
       * <code>string bcuid = 7;</code>
       */
      public Builder clearBcuid() {
        
        bcuid_ = getDefaultInstance().getBcuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点的唯一ID
       * </pre>
       *
       * <code>string bcuid = 7;</code>
       */
      public Builder setBcuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bcuid_ = value;
        onChanged();
        return this;
      }

      private int tryNodeIdx_ ;
      /**
       * <pre>
       *节点的随机id
       * </pre>
       *
       * <code>int32 try_node_idx = 8;</code>
       */
      public int getTryNodeIdx() {
        return tryNodeIdx_;
      }
      /**
       * <pre>
       *节点的随机id
       * </pre>
       *
       * <code>int32 try_node_idx = 8;</code>
       */
      public Builder setTryNodeIdx(int value) {
        
        tryNodeIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点的随机id
       * </pre>
       *
       * <code>int32 try_node_idx = 8;</code>
       */
      public Builder clearTryNodeIdx() {
        
        tryNodeIdx_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object priKey_ = "";
      /**
       * <pre>
       *私钥，记得不要再在全网广播
       * </pre>
       *
       * <code>string pri_key = 9;</code>
       */
      public java.lang.String getPriKey() {
        java.lang.Object ref = priKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          priKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *私钥，记得不要再在全网广播
       * </pre>
       *
       * <code>string pri_key = 9;</code>
       */
      public com.google.protobuf.ByteString
          getPriKeyBytes() {
        java.lang.Object ref = priKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          priKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *私钥，记得不要再在全网广播
       * </pre>
       *
       * <code>string pri_key = 9;</code>
       */
      public Builder setPriKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        priKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *私钥，记得不要再在全网广播
       * </pre>
       *
       * <code>string pri_key = 9;</code>
       */
      public Builder clearPriKey() {
        
        priKey_ = getDefaultInstance().getPriKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *私钥，记得不要再在全网广播
       * </pre>
       *
       * <code>string pri_key = 9;</code>
       */
      public Builder setPriKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        priKey_ = value;
        onChanged();
        return this;
      }

      private int nodeIdx_ ;
      /**
       * <pre>
       *全网确定之后的节点id
       * </pre>
       *
       * <code>int32 node_idx = 10;</code>
       */
      public int getNodeIdx() {
        return nodeIdx_;
      }
      /**
       * <pre>
       *全网确定之后的节点id
       * </pre>
       *
       * <code>int32 node_idx = 10;</code>
       */
      public Builder setNodeIdx(int value) {
        
        nodeIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *全网确定之后的节点id
       * </pre>
       *
       * <code>int32 node_idx = 10;</code>
       */
      public Builder clearNodeIdx() {
        
        nodeIdx_ = 0;
        onChanged();
        return this;
      }

      private long recvCc_ ;
      /**
       * <pre>
       *总收到多少数据
       * </pre>
       *
       * <code>int64 recv_cc = 11;</code>
       */
      public long getRecvCc() {
        return recvCc_;
      }
      /**
       * <pre>
       *总收到多少数据
       * </pre>
       *
       * <code>int64 recv_cc = 11;</code>
       */
      public Builder setRecvCc(long value) {
        
        recvCc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总收到多少数据
       * </pre>
       *
       * <code>int64 recv_cc = 11;</code>
       */
      public Builder clearRecvCc() {
        
        recvCc_ = 0L;
        onChanged();
        return this;
      }

      private long sendCc_ ;
      /**
       * <pre>
       *总发送多少数据
       * </pre>
       *
       * <code>int64 send_cc = 12;</code>
       */
      public long getSendCc() {
        return sendCc_;
      }
      /**
       * <pre>
       *总发送多少数据
       * </pre>
       *
       * <code>int64 send_cc = 12;</code>
       */
      public Builder setSendCc(long value) {
        
        sendCc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总发送多少数据
       * </pre>
       *
       * <code>int64 send_cc = 12;</code>
       */
      public Builder clearSendCc() {
        
        sendCc_ = 0L;
        onChanged();
        return this;
      }

      private long blockCc_ ;
      /**
       * <pre>
       *总产生了多少个区块！
       * </pre>
       *
       * <code>int64 block_cc = 13;</code>
       */
      public long getBlockCc() {
        return blockCc_;
      }
      /**
       * <pre>
       *总产生了多少个区块！
       * </pre>
       *
       * <code>int64 block_cc = 13;</code>
       */
      public Builder setBlockCc(long value) {
        
        blockCc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总产生了多少个区块！
       * </pre>
       *
       * <code>int64 block_cc = 13;</code>
       */
      public Builder clearBlockCc() {
        
        blockCc_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object sign_ = "";
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public java.lang.String getSign() {
        java.lang.Object ref = sign_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sign_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public com.google.protobuf.ByteString
          getSignBytes() {
        java.lang.Object ref = sign_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sign_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSign(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sign_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder clearSign() {
        
        sign_ = getDefaultInstance().getSign();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSignBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sign_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.fc.brewchain.p22p.pbgens.PMNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:org.fc.brewchain.p22p.pbgens.PMNodeInfo)
    private static final org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo();
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PMNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<PMNodeInfo>() {
      public PMNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PMNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PMNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PMNodeInfo> getParserForType() {
      return PARSER;
    }

    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PSJoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.brewchain.p22p.pbgens.PSJoin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
     */
    boolean hasMyInfo();
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo();
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder();

    /**
     * <pre>
     *操作类型
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
     */
    int getOpValue();
    /**
     * <pre>
     *操作类型
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation getOp();
  }
  /**
   * <pre>
   *加入
   * </pre>
   *
   * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PSJoin}
   */
  public  static final class PSJoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.brewchain.p22p.pbgens.PSJoin)
      PSJoinOrBuilder {
    // Use PSJoin.newBuilder() to construct.
    private PSJoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PSJoin() {
      op_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PSJoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder subBuilder = null;
              if (myInfo_ != null) {
                subBuilder = myInfo_.toBuilder();
              }
              myInfo_ = input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(myInfo_);
                myInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              op_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.brewchain.p22p.pbgens.P22P.PSJoin.class, org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Builder.class);
    }

    /**
     * Protobuf enum {@code org.fc.brewchain.p22p.pbgens.PSJoin.Operation}
     */
    public enum Operation
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       *手动添加
       * </pre>
       *
       * <code>MANU_DISCOVER = 0;</code>
       */
      MANU_DISCOVER(0),
      /**
       * <pre>
       *节点请求连接
       * </pre>
       *
       * <code>NODE_CONNECT = 1;</code>
       */
      NODE_CONNECT(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       *手动添加
       * </pre>
       *
       * <code>MANU_DISCOVER = 0;</code>
       */
      public static final int MANU_DISCOVER_VALUE = 0;
      /**
       * <pre>
       *节点请求连接
       * </pre>
       *
       * <code>NODE_CONNECT = 1;</code>
       */
      public static final int NODE_CONNECT_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Operation valueOf(int value) {
        return forNumber(value);
      }

      public static Operation forNumber(int value) {
        switch (value) {
          case 0: return MANU_DISCOVER;
          case 1: return NODE_CONNECT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Operation> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
              public Operation findValueByNumber(int number) {
                return Operation.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.PSJoin.getDescriptor().getEnumTypes().get(0);
      }

      private static final Operation[] VALUES = values();

      public static Operation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Operation(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.fc.brewchain.p22p.pbgens.PSJoin.Operation)
    }

    public static final int MY_INFO_FIELD_NUMBER = 1;
    private org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo myInfo_;
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
     */
    public boolean hasMyInfo() {
      return myInfo_ != null;
    }
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo() {
      return myInfo_ == null ? org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
    }
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder() {
      return getMyInfo();
    }

    public static final int OP_FIELD_NUMBER = 2;
    private int op_;
    /**
     * <pre>
     *操作类型
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
     */
    public int getOpValue() {
      return op_;
    }
    /**
     * <pre>
     *操作类型
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation getOp() {
      org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation result = org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation.valueOf(op_);
      return result == null ? org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (myInfo_ != null) {
        output.writeMessage(1, getMyInfo());
      }
      if (op_ != org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation.MANU_DISCOVER.getNumber()) {
        output.writeEnum(2, op_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (myInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMyInfo());
      }
      if (op_ != org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation.MANU_DISCOVER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, op_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.brewchain.p22p.pbgens.P22P.PSJoin)) {
        return super.equals(obj);
      }
      org.fc.brewchain.p22p.pbgens.P22P.PSJoin other = (org.fc.brewchain.p22p.pbgens.P22P.PSJoin) obj;

      boolean result = true;
      result = result && (hasMyInfo() == other.hasMyInfo());
      if (hasMyInfo()) {
        result = result && getMyInfo()
            .equals(other.getMyInfo());
      }
      result = result && op_ == other.op_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMyInfo()) {
        hash = (37 * hash) + MY_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getMyInfo().hashCode();
      }
      hash = (37 * hash) + OP_FIELD_NUMBER;
      hash = (53 * hash) + op_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.brewchain.p22p.pbgens.P22P.PSJoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *加入
     * </pre>
     *
     * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PSJoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.brewchain.p22p.pbgens.PSJoin)
        org.fc.brewchain.p22p.pbgens.P22P.PSJoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.brewchain.p22p.pbgens.P22P.PSJoin.class, org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Builder.class);
      }

      // Construct using org.fc.brewchain.p22p.pbgens.P22P.PSJoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (myInfoBuilder_ == null) {
          myInfo_ = null;
        } else {
          myInfo_ = null;
          myInfoBuilder_ = null;
        }
        op_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_descriptor;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PSJoin getDefaultInstanceForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.PSJoin.getDefaultInstance();
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PSJoin build() {
        org.fc.brewchain.p22p.pbgens.P22P.PSJoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PSJoin buildPartial() {
        org.fc.brewchain.p22p.pbgens.P22P.PSJoin result = new org.fc.brewchain.p22p.pbgens.P22P.PSJoin(this);
        if (myInfoBuilder_ == null) {
          result.myInfo_ = myInfo_;
        } else {
          result.myInfo_ = myInfoBuilder_.build();
        }
        result.op_ = op_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.brewchain.p22p.pbgens.P22P.PSJoin) {
          return mergeFrom((org.fc.brewchain.p22p.pbgens.P22P.PSJoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.brewchain.p22p.pbgens.P22P.PSJoin other) {
        if (other == org.fc.brewchain.p22p.pbgens.P22P.PSJoin.getDefaultInstance()) return this;
        if (other.hasMyInfo()) {
          mergeMyInfo(other.getMyInfo());
        }
        if (other.op_ != 0) {
          setOpValue(other.getOpValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.brewchain.p22p.pbgens.P22P.PSJoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.brewchain.p22p.pbgens.P22P.PSJoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo myInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> myInfoBuilder_;
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      public boolean hasMyInfo() {
        return myInfoBuilder_ != null || myInfo_ != null;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo() {
        if (myInfoBuilder_ == null) {
          return myInfo_ == null ? org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
        } else {
          return myInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      public Builder setMyInfo(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          myInfo_ = value;
          onChanged();
        } else {
          myInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      public Builder setMyInfo(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (myInfoBuilder_ == null) {
          myInfo_ = builderForValue.build();
          onChanged();
        } else {
          myInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      public Builder mergeMyInfo(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (myInfo_ != null) {
            myInfo_ =
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.newBuilder(myInfo_).mergeFrom(value).buildPartial();
          } else {
            myInfo_ = value;
          }
          onChanged();
        } else {
          myInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      public Builder clearMyInfo() {
        if (myInfoBuilder_ == null) {
          myInfo_ = null;
          onChanged();
        } else {
          myInfo_ = null;
          myInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getMyInfoBuilder() {
        
        onChanged();
        return getMyInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder() {
        if (myInfoBuilder_ != null) {
          return myInfoBuilder_.getMessageOrBuilder();
        } else {
          return myInfo_ == null ?
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
        }
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getMyInfoFieldBuilder() {
        if (myInfoBuilder_ == null) {
          myInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  getMyInfo(),
                  getParentForChildren(),
                  isClean());
          myInfo_ = null;
        }
        return myInfoBuilder_;
      }

      private int op_ = 0;
      /**
       * <pre>
       *操作类型
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
       */
      public int getOpValue() {
        return op_;
      }
      /**
       * <pre>
       *操作类型
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
       */
      public Builder setOpValue(int value) {
        op_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *操作类型
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation getOp() {
        org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation result = org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation.valueOf(op_);
        return result == null ? org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *操作类型
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
       */
      public Builder setOp(org.fc.brewchain.p22p.pbgens.P22P.PSJoin.Operation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        op_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *操作类型
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PSJoin.Operation op = 2;</code>
       */
      public Builder clearOp() {
        
        op_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.fc.brewchain.p22p.pbgens.PSJoin)
    }

    // @@protoc_insertion_point(class_scope:org.fc.brewchain.p22p.pbgens.PSJoin)
    private static final org.fc.brewchain.p22p.pbgens.P22P.PSJoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.brewchain.p22p.pbgens.P22P.PSJoin();
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PSJoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PSJoin>
        PARSER = new com.google.protobuf.AbstractParser<PSJoin>() {
      public PSJoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PSJoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PSJoin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PSJoin> getParserForType() {
      return PARSER;
    }

    public org.fc.brewchain.p22p.pbgens.P22P.PSJoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PRetJoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.brewchain.p22p.pbgens.PRetJoin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *返回
     * </pre>
     *
     * <code>int32 ret_code = 1;</code>
     */
    int getRetCode();

    /**
     * <pre>
     *返回信息
     * </pre>
     *
     * <code>string ret_message = 2;</code>
     */
    java.lang.String getRetMessage();
    /**
     * <pre>
     *返回信息
     * </pre>
     *
     * <code>string ret_message = 2;</code>
     */
    com.google.protobuf.ByteString
        getRetMessageBytes();

    /**
     * <pre>
     *交换一下我自己的节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
     */
    boolean hasMyInfo();
    /**
     * <pre>
     *交换一下我自己的节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo();
    /**
     * <pre>
     *交换一下我自己的节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder();

    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> 
        getNodesList();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index);
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    int getNodesCount();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    java.lang.String getSign();
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    com.google.protobuf.ByteString
        getSignBytes();
  }
  /**
   * <pre>
   *加入的返回信息
   * </pre>
   *
   * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PRetJoin}
   */
  public  static final class PRetJoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.brewchain.p22p.pbgens.PRetJoin)
      PRetJoinOrBuilder {
    // Use PRetJoin.newBuilder() to construct.
    private PRetJoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PRetJoin() {
      retCode_ = 0;
      retMessage_ = "";
      nodes_ = java.util.Collections.emptyList();
      sign_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PRetJoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              retCode_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              retMessage_ = s;
              break;
            }
            case 26: {
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder subBuilder = null;
              if (myInfo_ != null) {
                subBuilder = myInfo_.toBuilder();
              }
              myInfo_ = input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(myInfo_);
                myInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                nodes_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              nodes_.add(
                  input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry));
              break;
            }
            case 802: {
              java.lang.String s = input.readStringRequireUtf8();

              sign_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.brewchain.p22p.pbgens.P22P.PRetJoin.class, org.fc.brewchain.p22p.pbgens.P22P.PRetJoin.Builder.class);
    }

    private int bitField0_;
    public static final int RET_CODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <pre>
     *返回
     * </pre>
     *
     * <code>int32 ret_code = 1;</code>
     */
    public int getRetCode() {
      return retCode_;
    }

    public static final int RET_MESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object retMessage_;
    /**
     * <pre>
     *返回信息
     * </pre>
     *
     * <code>string ret_message = 2;</code>
     */
    public java.lang.String getRetMessage() {
      java.lang.Object ref = retMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        retMessage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *返回信息
     * </pre>
     *
     * <code>string ret_message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRetMessageBytes() {
      java.lang.Object ref = retMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        retMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MY_INFO_FIELD_NUMBER = 3;
    private org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo myInfo_;
    /**
     * <pre>
     *交换一下我自己的节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
     */
    public boolean hasMyInfo() {
      return myInfo_ != null;
    }
    /**
     * <pre>
     *交换一下我自己的节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo() {
      return myInfo_ == null ? org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
    }
    /**
     * <pre>
     *交换一下我自己的节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder() {
      return getMyInfo();
    }

    public static final int NODES_FIELD_NUMBER = 4;
    private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> nodes_;
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int SIGN_FIELD_NUMBER = 100;
    private volatile java.lang.Object sign_;
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public java.lang.String getSign() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sign_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public com.google.protobuf.ByteString
        getSignBytes() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sign_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (retCode_ != 0) {
        output.writeInt32(1, retCode_);
      }
      if (!getRetMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, retMessage_);
      }
      if (myInfo_ != null) {
        output.writeMessage(3, getMyInfo());
      }
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(4, nodes_.get(i));
      }
      if (!getSignBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 100, sign_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (retCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, retCode_);
      }
      if (!getRetMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, retMessage_);
      }
      if (myInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMyInfo());
      }
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, nodes_.get(i));
      }
      if (!getSignBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(100, sign_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.brewchain.p22p.pbgens.P22P.PRetJoin)) {
        return super.equals(obj);
      }
      org.fc.brewchain.p22p.pbgens.P22P.PRetJoin other = (org.fc.brewchain.p22p.pbgens.P22P.PRetJoin) obj;

      boolean result = true;
      result = result && (getRetCode()
          == other.getRetCode());
      result = result && getRetMessage()
          .equals(other.getRetMessage());
      result = result && (hasMyInfo() == other.hasMyInfo());
      if (hasMyInfo()) {
        result = result && getMyInfo()
            .equals(other.getMyInfo());
      }
      result = result && getNodesList()
          .equals(other.getNodesList());
      result = result && getSign()
          .equals(other.getSign());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RET_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getRetCode();
      hash = (37 * hash) + RET_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getRetMessage().hashCode();
      if (hasMyInfo()) {
        hash = (37 * hash) + MY_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getMyInfo().hashCode();
      }
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (37 * hash) + SIGN_FIELD_NUMBER;
      hash = (53 * hash) + getSign().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.brewchain.p22p.pbgens.P22P.PRetJoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *加入的返回信息
     * </pre>
     *
     * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PRetJoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.brewchain.p22p.pbgens.PRetJoin)
        org.fc.brewchain.p22p.pbgens.P22P.PRetJoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.brewchain.p22p.pbgens.P22P.PRetJoin.class, org.fc.brewchain.p22p.pbgens.P22P.PRetJoin.Builder.class);
      }

      // Construct using org.fc.brewchain.p22p.pbgens.P22P.PRetJoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        retCode_ = 0;

        retMessage_ = "";

        if (myInfoBuilder_ == null) {
          myInfo_ = null;
        } else {
          myInfo_ = null;
          myInfoBuilder_ = null;
        }
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          nodesBuilder_.clear();
        }
        sign_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_descriptor;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PRetJoin getDefaultInstanceForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.PRetJoin.getDefaultInstance();
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PRetJoin build() {
        org.fc.brewchain.p22p.pbgens.P22P.PRetJoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PRetJoin buildPartial() {
        org.fc.brewchain.p22p.pbgens.P22P.PRetJoin result = new org.fc.brewchain.p22p.pbgens.P22P.PRetJoin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.retCode_ = retCode_;
        result.retMessage_ = retMessage_;
        if (myInfoBuilder_ == null) {
          result.myInfo_ = myInfo_;
        } else {
          result.myInfo_ = myInfoBuilder_.build();
        }
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        result.sign_ = sign_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.brewchain.p22p.pbgens.P22P.PRetJoin) {
          return mergeFrom((org.fc.brewchain.p22p.pbgens.P22P.PRetJoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.brewchain.p22p.pbgens.P22P.PRetJoin other) {
        if (other == org.fc.brewchain.p22p.pbgens.P22P.PRetJoin.getDefaultInstance()) return this;
        if (other.getRetCode() != 0) {
          setRetCode(other.getRetCode());
        }
        if (!other.getRetMessage().isEmpty()) {
          retMessage_ = other.retMessage_;
          onChanged();
        }
        if (other.hasMyInfo()) {
          mergeMyInfo(other.getMyInfo());
        }
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000008);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        if (!other.getSign().isEmpty()) {
          sign_ = other.sign_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.brewchain.p22p.pbgens.P22P.PRetJoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.brewchain.p22p.pbgens.P22P.PRetJoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <pre>
       *返回
       * </pre>
       *
       * <code>int32 ret_code = 1;</code>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <pre>
       *返回
       * </pre>
       *
       * <code>int32 ret_code = 1;</code>
       */
      public Builder setRetCode(int value) {
        
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回
       * </pre>
       *
       * <code>int32 ret_code = 1;</code>
       */
      public Builder clearRetCode() {
        
        retCode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object retMessage_ = "";
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public java.lang.String getRetMessage() {
        java.lang.Object ref = retMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          retMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRetMessageBytes() {
        java.lang.Object ref = retMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          retMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public Builder setRetMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        retMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public Builder clearRetMessage() {
        
        retMessage_ = getDefaultInstance().getRetMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public Builder setRetMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        retMessage_ = value;
        onChanged();
        return this;
      }

      private org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo myInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> myInfoBuilder_;
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      public boolean hasMyInfo() {
        return myInfoBuilder_ != null || myInfo_ != null;
      }
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo() {
        if (myInfoBuilder_ == null) {
          return myInfo_ == null ? org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
        } else {
          return myInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      public Builder setMyInfo(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          myInfo_ = value;
          onChanged();
        } else {
          myInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      public Builder setMyInfo(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (myInfoBuilder_ == null) {
          myInfo_ = builderForValue.build();
          onChanged();
        } else {
          myInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      public Builder mergeMyInfo(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (myInfo_ != null) {
            myInfo_ =
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.newBuilder(myInfo_).mergeFrom(value).buildPartial();
          } else {
            myInfo_ = value;
          }
          onChanged();
        } else {
          myInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      public Builder clearMyInfo() {
        if (myInfoBuilder_ == null) {
          myInfo_ = null;
          onChanged();
        } else {
          myInfo_ = null;
          myInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getMyInfoBuilder() {
        
        onChanged();
        return getMyInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder() {
        if (myInfoBuilder_ != null) {
          return myInfoBuilder_.getMessageOrBuilder();
        } else {
          return myInfo_ == null ?
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
        }
      }
      /**
       * <pre>
       *交换一下我自己的节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getMyInfoFieldBuilder() {
        if (myInfoBuilder_ == null) {
          myInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  getMyInfo(),
                  getParentForChildren(),
                  isClean());
          myInfo_ = null;
        }
        return myInfoBuilder_;
      }

      private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          nodes_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>(nodes_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> nodesBuilder_;

      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder setNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder setNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder addNodes(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder addNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder addNodes(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder addNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 4;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private java.lang.Object sign_ = "";
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public java.lang.String getSign() {
        java.lang.Object ref = sign_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sign_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public com.google.protobuf.ByteString
          getSignBytes() {
        java.lang.Object ref = sign_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sign_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSign(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sign_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder clearSign() {
        
        sign_ = getDefaultInstance().getSign();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSignBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sign_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.fc.brewchain.p22p.pbgens.PRetJoin)
    }

    // @@protoc_insertion_point(class_scope:org.fc.brewchain.p22p.pbgens.PRetJoin)
    private static final org.fc.brewchain.p22p.pbgens.P22P.PRetJoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.brewchain.p22p.pbgens.P22P.PRetJoin();
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PRetJoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PRetJoin>
        PARSER = new com.google.protobuf.AbstractParser<PRetJoin>() {
      public PRetJoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PRetJoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PRetJoin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PRetJoin> getParserForType() {
      return PARSER;
    }

    public org.fc.brewchain.p22p.pbgens.P22P.PRetJoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PSNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.brewchain.p22p.pbgens.PSNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *是否获取拓扑信息
     * </pre>
     *
     * <code>string req_token = 1;</code>
     */
    java.lang.String getReqToken();
    /**
     * <pre>
     *是否获取拓扑信息
     * </pre>
     *
     * <code>string req_token = 1;</code>
     */
    com.google.protobuf.ByteString
        getReqTokenBytes();
  }
  /**
   * <pre>
   *加入
   * </pre>
   *
   * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PSNodeInfo}
   */
  public  static final class PSNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.brewchain.p22p.pbgens.PSNodeInfo)
      PSNodeInfoOrBuilder {
    // Use PSNodeInfo.newBuilder() to construct.
    private PSNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PSNodeInfo() {
      reqToken_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PSNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              reqToken_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo.class, org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo.Builder.class);
    }

    public static final int REQ_TOKEN_FIELD_NUMBER = 1;
    private volatile java.lang.Object reqToken_;
    /**
     * <pre>
     *是否获取拓扑信息
     * </pre>
     *
     * <code>string req_token = 1;</code>
     */
    public java.lang.String getReqToken() {
      java.lang.Object ref = reqToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reqToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *是否获取拓扑信息
     * </pre>
     *
     * <code>string req_token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getReqTokenBytes() {
      java.lang.Object ref = reqToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reqToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getReqTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, reqToken_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getReqTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, reqToken_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo)) {
        return super.equals(obj);
      }
      org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo other = (org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo) obj;

      boolean result = true;
      result = result && getReqToken()
          .equals(other.getReqToken());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REQ_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getReqToken().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *加入
     * </pre>
     *
     * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PSNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.brewchain.p22p.pbgens.PSNodeInfo)
        org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo.class, org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo.Builder.class);
      }

      // Construct using org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        reqToken_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_descriptor;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo getDefaultInstanceForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo.getDefaultInstance();
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo build() {
        org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo buildPartial() {
        org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo result = new org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo(this);
        result.reqToken_ = reqToken_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo) {
          return mergeFrom((org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo other) {
        if (other == org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo.getDefaultInstance()) return this;
        if (!other.getReqToken().isEmpty()) {
          reqToken_ = other.reqToken_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object reqToken_ = "";
      /**
       * <pre>
       *是否获取拓扑信息
       * </pre>
       *
       * <code>string req_token = 1;</code>
       */
      public java.lang.String getReqToken() {
        java.lang.Object ref = reqToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          reqToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *是否获取拓扑信息
       * </pre>
       *
       * <code>string req_token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getReqTokenBytes() {
        java.lang.Object ref = reqToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reqToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *是否获取拓扑信息
       * </pre>
       *
       * <code>string req_token = 1;</code>
       */
      public Builder setReqToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reqToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否获取拓扑信息
       * </pre>
       *
       * <code>string req_token = 1;</code>
       */
      public Builder clearReqToken() {
        
        reqToken_ = getDefaultInstance().getReqToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否获取拓扑信息
       * </pre>
       *
       * <code>string req_token = 1;</code>
       */
      public Builder setReqTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reqToken_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.fc.brewchain.p22p.pbgens.PSNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:org.fc.brewchain.p22p.pbgens.PSNodeInfo)
    private static final org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo();
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PSNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<PSNodeInfo>() {
      public PSNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PSNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PSNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PSNodeInfo> getParserForType() {
      return PARSER;
    }

    public org.fc.brewchain.p22p.pbgens.P22P.PSNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PRetNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.brewchain.p22p.pbgens.PRetNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *返回
     * </pre>
     *
     * <code>int32 ret_code = 1;</code>
     */
    int getRetCode();

    /**
     * <pre>
     *返回信息
     * </pre>
     *
     * <code>string ret_message = 2;</code>
     */
    java.lang.String getRetMessage();
    /**
     * <pre>
     *返回信息
     * </pre>
     *
     * <code>string ret_message = 2;</code>
     */
    com.google.protobuf.ByteString
        getRetMessageBytes();

    /**
     * <pre>
     *本节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
     */
    boolean hasCurrent();
    /**
     * <pre>
     *本节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getCurrent();
    /**
     * <pre>
     *本节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getCurrentOrBuilder();

    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> 
        getPendingsList();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getPendings(int index);
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    int getPendingsCount();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getPendingsOrBuilderList();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getPendingsOrBuilder(
        int index);

    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> 
        getNodesList();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index);
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    int getNodesCount();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    java.lang.String getSign();
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    com.google.protobuf.ByteString
        getSignBytes();
  }
  /**
   * <pre>
   *加入的返回信息
   * </pre>
   *
   * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PRetNodeInfo}
   */
  public  static final class PRetNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.brewchain.p22p.pbgens.PRetNodeInfo)
      PRetNodeInfoOrBuilder {
    // Use PRetNodeInfo.newBuilder() to construct.
    private PRetNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PRetNodeInfo() {
      retCode_ = 0;
      retMessage_ = "";
      pendings_ = java.util.Collections.emptyList();
      nodes_ = java.util.Collections.emptyList();
      sign_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PRetNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              retCode_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              retMessage_ = s;
              break;
            }
            case 34: {
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder subBuilder = null;
              if (current_ != null) {
                subBuilder = current_.toBuilder();
              }
              current_ = input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(current_);
                current_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                pendings_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              pendings_.add(
                  input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                nodes_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              nodes_.add(
                  input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry));
              break;
            }
            case 802: {
              java.lang.String s = input.readStringRequireUtf8();

              sign_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          pendings_ = java.util.Collections.unmodifiableList(pendings_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo.class, org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo.Builder.class);
    }

    private int bitField0_;
    public static final int RET_CODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <pre>
     *返回
     * </pre>
     *
     * <code>int32 ret_code = 1;</code>
     */
    public int getRetCode() {
      return retCode_;
    }

    public static final int RET_MESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object retMessage_;
    /**
     * <pre>
     *返回信息
     * </pre>
     *
     * <code>string ret_message = 2;</code>
     */
    public java.lang.String getRetMessage() {
      java.lang.Object ref = retMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        retMessage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *返回信息
     * </pre>
     *
     * <code>string ret_message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRetMessageBytes() {
      java.lang.Object ref = retMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        retMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENT_FIELD_NUMBER = 4;
    private org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo current_;
    /**
     * <pre>
     *本节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
     */
    public boolean hasCurrent() {
      return current_ != null;
    }
    /**
     * <pre>
     *本节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getCurrent() {
      return current_ == null ? org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : current_;
    }
    /**
     * <pre>
     *本节点信息
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getCurrentOrBuilder() {
      return getCurrent();
    }

    public static final int PENDINGS_FIELD_NUMBER = 5;
    private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> pendings_;
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getPendingsList() {
      return pendings_;
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getPendingsOrBuilderList() {
      return pendings_;
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    public int getPendingsCount() {
      return pendings_.size();
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getPendings(int index) {
      return pendings_.get(index);
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getPendingsOrBuilder(
        int index) {
      return pendings_.get(index);
    }

    public static final int NODES_FIELD_NUMBER = 6;
    private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> nodes_;
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     *交换一下我知道的节点信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int SIGN_FIELD_NUMBER = 100;
    private volatile java.lang.Object sign_;
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public java.lang.String getSign() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sign_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public com.google.protobuf.ByteString
        getSignBytes() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sign_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (retCode_ != 0) {
        output.writeInt32(1, retCode_);
      }
      if (!getRetMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, retMessage_);
      }
      if (current_ != null) {
        output.writeMessage(4, getCurrent());
      }
      for (int i = 0; i < pendings_.size(); i++) {
        output.writeMessage(5, pendings_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(6, nodes_.get(i));
      }
      if (!getSignBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 100, sign_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (retCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, retCode_);
      }
      if (!getRetMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, retMessage_);
      }
      if (current_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCurrent());
      }
      for (int i = 0; i < pendings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, pendings_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, nodes_.get(i));
      }
      if (!getSignBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(100, sign_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo)) {
        return super.equals(obj);
      }
      org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo other = (org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo) obj;

      boolean result = true;
      result = result && (getRetCode()
          == other.getRetCode());
      result = result && getRetMessage()
          .equals(other.getRetMessage());
      result = result && (hasCurrent() == other.hasCurrent());
      if (hasCurrent()) {
        result = result && getCurrent()
            .equals(other.getCurrent());
      }
      result = result && getPendingsList()
          .equals(other.getPendingsList());
      result = result && getNodesList()
          .equals(other.getNodesList());
      result = result && getSign()
          .equals(other.getSign());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RET_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getRetCode();
      hash = (37 * hash) + RET_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getRetMessage().hashCode();
      if (hasCurrent()) {
        hash = (37 * hash) + CURRENT_FIELD_NUMBER;
        hash = (53 * hash) + getCurrent().hashCode();
      }
      if (getPendingsCount() > 0) {
        hash = (37 * hash) + PENDINGS_FIELD_NUMBER;
        hash = (53 * hash) + getPendingsList().hashCode();
      }
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (37 * hash) + SIGN_FIELD_NUMBER;
      hash = (53 * hash) + getSign().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *加入的返回信息
     * </pre>
     *
     * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PRetNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.brewchain.p22p.pbgens.PRetNodeInfo)
        org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo.class, org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo.Builder.class);
      }

      // Construct using org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPendingsFieldBuilder();
          getNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        retCode_ = 0;

        retMessage_ = "";

        if (currentBuilder_ == null) {
          current_ = null;
        } else {
          current_ = null;
          currentBuilder_ = null;
        }
        if (pendingsBuilder_ == null) {
          pendings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          pendingsBuilder_.clear();
        }
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          nodesBuilder_.clear();
        }
        sign_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_descriptor;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo getDefaultInstanceForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo.getDefaultInstance();
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo build() {
        org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo buildPartial() {
        org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo result = new org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.retCode_ = retCode_;
        result.retMessage_ = retMessage_;
        if (currentBuilder_ == null) {
          result.current_ = current_;
        } else {
          result.current_ = currentBuilder_.build();
        }
        if (pendingsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            pendings_ = java.util.Collections.unmodifiableList(pendings_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.pendings_ = pendings_;
        } else {
          result.pendings_ = pendingsBuilder_.build();
        }
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        result.sign_ = sign_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo) {
          return mergeFrom((org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo other) {
        if (other == org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo.getDefaultInstance()) return this;
        if (other.getRetCode() != 0) {
          setRetCode(other.getRetCode());
        }
        if (!other.getRetMessage().isEmpty()) {
          retMessage_ = other.retMessage_;
          onChanged();
        }
        if (other.hasCurrent()) {
          mergeCurrent(other.getCurrent());
        }
        if (pendingsBuilder_ == null) {
          if (!other.pendings_.isEmpty()) {
            if (pendings_.isEmpty()) {
              pendings_ = other.pendings_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePendingsIsMutable();
              pendings_.addAll(other.pendings_);
            }
            onChanged();
          }
        } else {
          if (!other.pendings_.isEmpty()) {
            if (pendingsBuilder_.isEmpty()) {
              pendingsBuilder_.dispose();
              pendingsBuilder_ = null;
              pendings_ = other.pendings_;
              bitField0_ = (bitField0_ & ~0x00000008);
              pendingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPendingsFieldBuilder() : null;
            } else {
              pendingsBuilder_.addAllMessages(other.pendings_);
            }
          }
        }
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000010);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        if (!other.getSign().isEmpty()) {
          sign_ = other.sign_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <pre>
       *返回
       * </pre>
       *
       * <code>int32 ret_code = 1;</code>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <pre>
       *返回
       * </pre>
       *
       * <code>int32 ret_code = 1;</code>
       */
      public Builder setRetCode(int value) {
        
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回
       * </pre>
       *
       * <code>int32 ret_code = 1;</code>
       */
      public Builder clearRetCode() {
        
        retCode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object retMessage_ = "";
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public java.lang.String getRetMessage() {
        java.lang.Object ref = retMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          retMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRetMessageBytes() {
        java.lang.Object ref = retMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          retMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public Builder setRetMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        retMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public Builder clearRetMessage() {
        
        retMessage_ = getDefaultInstance().getRetMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回信息
       * </pre>
       *
       * <code>string ret_message = 2;</code>
       */
      public Builder setRetMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        retMessage_ = value;
        onChanged();
        return this;
      }

      private org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo current_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> currentBuilder_;
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      public boolean hasCurrent() {
        return currentBuilder_ != null || current_ != null;
      }
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getCurrent() {
        if (currentBuilder_ == null) {
          return current_ == null ? org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : current_;
        } else {
          return currentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      public Builder setCurrent(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (currentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          current_ = value;
          onChanged();
        } else {
          currentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      public Builder setCurrent(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (currentBuilder_ == null) {
          current_ = builderForValue.build();
          onChanged();
        } else {
          currentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      public Builder mergeCurrent(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (currentBuilder_ == null) {
          if (current_ != null) {
            current_ =
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.newBuilder(current_).mergeFrom(value).buildPartial();
          } else {
            current_ = value;
          }
          onChanged();
        } else {
          currentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      public Builder clearCurrent() {
        if (currentBuilder_ == null) {
          current_ = null;
          onChanged();
        } else {
          current_ = null;
          currentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getCurrentBuilder() {
        
        onChanged();
        return getCurrentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getCurrentOrBuilder() {
        if (currentBuilder_ != null) {
          return currentBuilder_.getMessageOrBuilder();
        } else {
          return current_ == null ?
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : current_;
        }
      }
      /**
       * <pre>
       *本节点信息
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo current = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getCurrentFieldBuilder() {
        if (currentBuilder_ == null) {
          currentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  getCurrent(),
                  getParentForChildren(),
                  isClean());
          current_ = null;
        }
        return currentBuilder_;
      }

      private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> pendings_ =
        java.util.Collections.emptyList();
      private void ensurePendingsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          pendings_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>(pendings_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> pendingsBuilder_;

      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getPendingsList() {
        if (pendingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pendings_);
        } else {
          return pendingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public int getPendingsCount() {
        if (pendingsBuilder_ == null) {
          return pendings_.size();
        } else {
          return pendingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getPendings(int index) {
        if (pendingsBuilder_ == null) {
          return pendings_.get(index);
        } else {
          return pendingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder setPendings(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (pendingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePendingsIsMutable();
          pendings_.set(index, value);
          onChanged();
        } else {
          pendingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder setPendings(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (pendingsBuilder_ == null) {
          ensurePendingsIsMutable();
          pendings_.set(index, builderForValue.build());
          onChanged();
        } else {
          pendingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder addPendings(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (pendingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePendingsIsMutable();
          pendings_.add(value);
          onChanged();
        } else {
          pendingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder addPendings(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (pendingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePendingsIsMutable();
          pendings_.add(index, value);
          onChanged();
        } else {
          pendingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder addPendings(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (pendingsBuilder_ == null) {
          ensurePendingsIsMutable();
          pendings_.add(builderForValue.build());
          onChanged();
        } else {
          pendingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder addPendings(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (pendingsBuilder_ == null) {
          ensurePendingsIsMutable();
          pendings_.add(index, builderForValue.build());
          onChanged();
        } else {
          pendingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder addAllPendings(
          java.lang.Iterable<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> values) {
        if (pendingsBuilder_ == null) {
          ensurePendingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pendings_);
          onChanged();
        } else {
          pendingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder clearPendings() {
        if (pendingsBuilder_ == null) {
          pendings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          pendingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public Builder removePendings(int index) {
        if (pendingsBuilder_ == null) {
          ensurePendingsIsMutable();
          pendings_.remove(index);
          onChanged();
        } else {
          pendingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getPendingsBuilder(
          int index) {
        return getPendingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getPendingsOrBuilder(
          int index) {
        if (pendingsBuilder_ == null) {
          return pendings_.get(index);  } else {
          return pendingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
           getPendingsOrBuilderList() {
        if (pendingsBuilder_ != null) {
          return pendingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pendings_);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addPendingsBuilder() {
        return getPendingsFieldBuilder().addBuilder(
            org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addPendingsBuilder(
          int index) {
        return getPendingsFieldBuilder().addBuilder(
            index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo pendings = 5;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder> 
           getPendingsBuilderList() {
        return getPendingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getPendingsFieldBuilder() {
        if (pendingsBuilder_ == null) {
          pendingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  pendings_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          pendings_ = null;
        }
        return pendingsBuilder_;
      }

      private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          nodes_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>(nodes_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> nodesBuilder_;

      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder setNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder setNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder addNodes(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder addNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder addNodes(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder addNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *交换一下我知道的节点信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 6;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private java.lang.Object sign_ = "";
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public java.lang.String getSign() {
        java.lang.Object ref = sign_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sign_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public com.google.protobuf.ByteString
          getSignBytes() {
        java.lang.Object ref = sign_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sign_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSign(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sign_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder clearSign() {
        
        sign_ = getDefaultInstance().getSign();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSignBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sign_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.fc.brewchain.p22p.pbgens.PRetNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:org.fc.brewchain.p22p.pbgens.PRetNodeInfo)
    private static final org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo();
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PRetNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<PRetNodeInfo>() {
      public PRetNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PRetNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PRetNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PRetNodeInfo> getParserForType() {
      return PARSER;
    }

    public org.fc.brewchain.p22p.pbgens.P22P.PRetNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PBSwitchNodesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.brewchain.p22p.pbgens.PBSwitchNodes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> 
        getNodesList();
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index);
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    int getNodesCount();
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
     */
    boolean hasMyInfo();
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo();
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder();

    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    java.lang.String getSign();
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    com.google.protobuf.ByteString
        getSignBytes();
  }
  /**
   * <pre>
   *交换我所知道的节点信息
   * </pre>
   *
   * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PBSwitchNodes}
   */
  public  static final class PBSwitchNodes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.brewchain.p22p.pbgens.PBSwitchNodes)
      PBSwitchNodesOrBuilder {
    // Use PBSwitchNodes.newBuilder() to construct.
    private PBSwitchNodes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PBSwitchNodes() {
      nodes_ = java.util.Collections.emptyList();
      sign_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PBSwitchNodes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodes_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(
                  input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry));
              break;
            }
            case 18: {
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder subBuilder = null;
              if (myInfo_ != null) {
                subBuilder = myInfo_.toBuilder();
              }
              myInfo_ = input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(myInfo_);
                myInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 802: {
              java.lang.String s = input.readStringRequireUtf8();

              sign_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes.class, org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes.Builder.class);
    }

    private int bitField0_;
    public static final int NODES_FIELD_NUMBER = 1;
    private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> nodes_;
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int MY_INFO_FIELD_NUMBER = 2;
    private org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo myInfo_;
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
     */
    public boolean hasMyInfo() {
      return myInfo_ != null;
    }
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo() {
      return myInfo_ == null ? org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
    }
    /**
     * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder() {
      return getMyInfo();
    }

    public static final int SIGN_FIELD_NUMBER = 100;
    private volatile java.lang.Object sign_;
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public java.lang.String getSign() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sign_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public com.google.protobuf.ByteString
        getSignBytes() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sign_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(1, nodes_.get(i));
      }
      if (myInfo_ != null) {
        output.writeMessage(2, getMyInfo());
      }
      if (!getSignBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 100, sign_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodes_.get(i));
      }
      if (myInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMyInfo());
      }
      if (!getSignBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(100, sign_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes)) {
        return super.equals(obj);
      }
      org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes other = (org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes) obj;

      boolean result = true;
      result = result && getNodesList()
          .equals(other.getNodesList());
      result = result && (hasMyInfo() == other.hasMyInfo());
      if (hasMyInfo()) {
        result = result && getMyInfo()
            .equals(other.getMyInfo());
      }
      result = result && getSign()
          .equals(other.getSign());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      if (hasMyInfo()) {
        hash = (37 * hash) + MY_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getMyInfo().hashCode();
      }
      hash = (37 * hash) + SIGN_FIELD_NUMBER;
      hash = (53 * hash) + getSign().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *交换我所知道的节点信息
     * </pre>
     *
     * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PBSwitchNodes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.brewchain.p22p.pbgens.PBSwitchNodes)
        org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes.class, org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes.Builder.class);
      }

      // Construct using org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        if (myInfoBuilder_ == null) {
          myInfo_ = null;
        } else {
          myInfo_ = null;
          myInfoBuilder_ = null;
        }
        sign_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_descriptor;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes getDefaultInstanceForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes.getDefaultInstance();
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes build() {
        org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes buildPartial() {
        org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes result = new org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        if (myInfoBuilder_ == null) {
          result.myInfo_ = myInfo_;
        } else {
          result.myInfo_ = myInfoBuilder_.build();
        }
        result.sign_ = sign_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes) {
          return mergeFrom((org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes other) {
        if (other == org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes.getDefaultInstance()) return this;
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        if (other.hasMyInfo()) {
          mergeMyInfo(other.getMyInfo());
        }
        if (!other.getSign().isEmpty()) {
          sign_ = other.sign_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> nodesBuilder_;

      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder setNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder setNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addNodes(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addNodes(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo myInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> myInfoBuilder_;
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      public boolean hasMyInfo() {
        return myInfoBuilder_ != null || myInfo_ != null;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getMyInfo() {
        if (myInfoBuilder_ == null) {
          return myInfo_ == null ? org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
        } else {
          return myInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      public Builder setMyInfo(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          myInfo_ = value;
          onChanged();
        } else {
          myInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      public Builder setMyInfo(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (myInfoBuilder_ == null) {
          myInfo_ = builderForValue.build();
          onChanged();
        } else {
          myInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      public Builder mergeMyInfo(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (myInfo_ != null) {
            myInfo_ =
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.newBuilder(myInfo_).mergeFrom(value).buildPartial();
          } else {
            myInfo_ = value;
          }
          onChanged();
        } else {
          myInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      public Builder clearMyInfo() {
        if (myInfoBuilder_ == null) {
          myInfo_ = null;
          onChanged();
        } else {
          myInfo_ = null;
          myInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getMyInfoBuilder() {
        
        onChanged();
        return getMyInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getMyInfoOrBuilder() {
        if (myInfoBuilder_ != null) {
          return myInfoBuilder_.getMessageOrBuilder();
        } else {
          return myInfo_ == null ?
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance() : myInfo_;
        }
      }
      /**
       * <code>.org.fc.brewchain.p22p.pbgens.PMNodeInfo my_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getMyInfoFieldBuilder() {
        if (myInfoBuilder_ == null) {
          myInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  getMyInfo(),
                  getParentForChildren(),
                  isClean());
          myInfo_ = null;
        }
        return myInfoBuilder_;
      }

      private java.lang.Object sign_ = "";
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public java.lang.String getSign() {
        java.lang.Object ref = sign_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sign_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public com.google.protobuf.ByteString
          getSignBytes() {
        java.lang.Object ref = sign_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sign_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSign(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sign_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder clearSign() {
        
        sign_ = getDefaultInstance().getSign();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSignBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sign_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.fc.brewchain.p22p.pbgens.PBSwitchNodes)
    }

    // @@protoc_insertion_point(class_scope:org.fc.brewchain.p22p.pbgens.PBSwitchNodes)
    private static final org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes();
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PBSwitchNodes>
        PARSER = new com.google.protobuf.AbstractParser<PBSwitchNodes>() {
      public PBSwitchNodes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PBSwitchNodes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PBSwitchNodes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PBSwitchNodes> getParserForType() {
      return PARSER;
    }

    public org.fc.brewchain.p22p.pbgens.P22P.PBSwitchNodes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PVBaseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.brewchain.p22p.pbgens.PVBase)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *状态
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
     */
    int getStateValue();
    /**
     * <pre>
     *状态
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PBFTStage getState();

    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>uint32 m_type = 2;</code>
     */
    int getMType();

    /**
     * <pre>
     *该消息类型对应的view_id序列
     * </pre>
     *
     * <code>uint32 v = 3;</code>
     */
    int getV();

    /**
     * <pre>
     *最大的id
     * </pre>
     *
     * <code>uint32 max_vid = 4;</code>
     */
    int getMaxVid();

    /**
     * <pre>
     * number
     * </pre>
     *
     * <code>uint32 n = 5;</code>
     */
    int getN();

    /**
     * <code>bytes contents = 10;</code>
     */
    com.google.protobuf.ByteString getContents();

    /**
     * <pre>
     *消息的uuid
     * </pre>
     *
     * <code>string message_uid = 30;</code>
     */
    java.lang.String getMessageUid();
    /**
     * <pre>
     *消息的uuid
     * </pre>
     *
     * <code>string message_uid = 30;</code>
     */
    com.google.protobuf.ByteString
        getMessageUidBytes();

    /**
     * <pre>
     *从哪个节点名称来的
     * </pre>
     *
     * <code>string from_bcuid = 31;</code>
     */
    java.lang.String getFromBcuid();
    /**
     * <pre>
     *从哪个节点名称来的
     * </pre>
     *
     * <code>string from_bcuid = 31;</code>
     */
    com.google.protobuf.ByteString
        getFromBcuidBytes();

    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    java.lang.String getSign();
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    com.google.protobuf.ByteString
        getSignBytes();
  }
  /**
   * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PVBase}
   */
  public  static final class PVBase extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.brewchain.p22p.pbgens.PVBase)
      PVBaseOrBuilder {
    // Use PVBase.newBuilder() to construct.
    private PVBase(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PVBase() {
      state_ = 0;
      mType_ = 0;
      v_ = 0;
      maxVid_ = 0;
      n_ = 0;
      contents_ = com.google.protobuf.ByteString.EMPTY;
      messageUid_ = "";
      fromBcuid_ = "";
      sign_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PVBase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              state_ = rawValue;
              break;
            }
            case 16: {

              mType_ = input.readUInt32();
              break;
            }
            case 24: {

              v_ = input.readUInt32();
              break;
            }
            case 32: {

              maxVid_ = input.readUInt32();
              break;
            }
            case 40: {

              n_ = input.readUInt32();
              break;
            }
            case 82: {

              contents_ = input.readBytes();
              break;
            }
            case 242: {
              java.lang.String s = input.readStringRequireUtf8();

              messageUid_ = s;
              break;
            }
            case 250: {
              java.lang.String s = input.readStringRequireUtf8();

              fromBcuid_ = s;
              break;
            }
            case 802: {
              java.lang.String s = input.readStringRequireUtf8();

              sign_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PVBase_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PVBase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.brewchain.p22p.pbgens.P22P.PVBase.class, org.fc.brewchain.p22p.pbgens.P22P.PVBase.Builder.class);
    }

    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <pre>
     *状态
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
     */
    public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     *状态
     * </pre>
     *
     * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PBFTStage getState() {
      org.fc.brewchain.p22p.pbgens.P22P.PBFTStage result = org.fc.brewchain.p22p.pbgens.P22P.PBFTStage.valueOf(state_);
      return result == null ? org.fc.brewchain.p22p.pbgens.P22P.PBFTStage.UNRECOGNIZED : result;
    }

    public static final int M_TYPE_FIELD_NUMBER = 2;
    private int mType_;
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>uint32 m_type = 2;</code>
     */
    public int getMType() {
      return mType_;
    }

    public static final int V_FIELD_NUMBER = 3;
    private int v_;
    /**
     * <pre>
     *该消息类型对应的view_id序列
     * </pre>
     *
     * <code>uint32 v = 3;</code>
     */
    public int getV() {
      return v_;
    }

    public static final int MAX_VID_FIELD_NUMBER = 4;
    private int maxVid_;
    /**
     * <pre>
     *最大的id
     * </pre>
     *
     * <code>uint32 max_vid = 4;</code>
     */
    public int getMaxVid() {
      return maxVid_;
    }

    public static final int N_FIELD_NUMBER = 5;
    private int n_;
    /**
     * <pre>
     * number
     * </pre>
     *
     * <code>uint32 n = 5;</code>
     */
    public int getN() {
      return n_;
    }

    public static final int CONTENTS_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString contents_;
    /**
     * <code>bytes contents = 10;</code>
     */
    public com.google.protobuf.ByteString getContents() {
      return contents_;
    }

    public static final int MESSAGE_UID_FIELD_NUMBER = 30;
    private volatile java.lang.Object messageUid_;
    /**
     * <pre>
     *消息的uuid
     * </pre>
     *
     * <code>string message_uid = 30;</code>
     */
    public java.lang.String getMessageUid() {
      java.lang.Object ref = messageUid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        messageUid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *消息的uuid
     * </pre>
     *
     * <code>string message_uid = 30;</code>
     */
    public com.google.protobuf.ByteString
        getMessageUidBytes() {
      java.lang.Object ref = messageUid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        messageUid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FROM_BCUID_FIELD_NUMBER = 31;
    private volatile java.lang.Object fromBcuid_;
    /**
     * <pre>
     *从哪个节点名称来的
     * </pre>
     *
     * <code>string from_bcuid = 31;</code>
     */
    public java.lang.String getFromBcuid() {
      java.lang.Object ref = fromBcuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fromBcuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *从哪个节点名称来的
     * </pre>
     *
     * <code>string from_bcuid = 31;</code>
     */
    public com.google.protobuf.ByteString
        getFromBcuidBytes() {
      java.lang.Object ref = fromBcuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fromBcuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIGN_FIELD_NUMBER = 100;
    private volatile java.lang.Object sign_;
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public java.lang.String getSign() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sign_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *对上述数据的签名结果
     * </pre>
     *
     * <code>string sign = 100;</code>
     */
    public com.google.protobuf.ByteString
        getSignBytes() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sign_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (state_ != org.fc.brewchain.p22p.pbgens.P22P.PBFTStage.PRE_PREPARE.getNumber()) {
        output.writeEnum(1, state_);
      }
      if (mType_ != 0) {
        output.writeUInt32(2, mType_);
      }
      if (v_ != 0) {
        output.writeUInt32(3, v_);
      }
      if (maxVid_ != 0) {
        output.writeUInt32(4, maxVid_);
      }
      if (n_ != 0) {
        output.writeUInt32(5, n_);
      }
      if (!contents_.isEmpty()) {
        output.writeBytes(10, contents_);
      }
      if (!getMessageUidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 30, messageUid_);
      }
      if (!getFromBcuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 31, fromBcuid_);
      }
      if (!getSignBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 100, sign_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (state_ != org.fc.brewchain.p22p.pbgens.P22P.PBFTStage.PRE_PREPARE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_);
      }
      if (mType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, mType_);
      }
      if (v_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, v_);
      }
      if (maxVid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maxVid_);
      }
      if (n_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, n_);
      }
      if (!contents_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, contents_);
      }
      if (!getMessageUidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(30, messageUid_);
      }
      if (!getFromBcuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(31, fromBcuid_);
      }
      if (!getSignBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(100, sign_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.brewchain.p22p.pbgens.P22P.PVBase)) {
        return super.equals(obj);
      }
      org.fc.brewchain.p22p.pbgens.P22P.PVBase other = (org.fc.brewchain.p22p.pbgens.P22P.PVBase) obj;

      boolean result = true;
      result = result && state_ == other.state_;
      result = result && (getMType()
          == other.getMType());
      result = result && (getV()
          == other.getV());
      result = result && (getMaxVid()
          == other.getMaxVid());
      result = result && (getN()
          == other.getN());
      result = result && getContents()
          .equals(other.getContents());
      result = result && getMessageUid()
          .equals(other.getMessageUid());
      result = result && getFromBcuid()
          .equals(other.getFromBcuid());
      result = result && getSign()
          .equals(other.getSign());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
      hash = (37 * hash) + M_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMType();
      hash = (37 * hash) + V_FIELD_NUMBER;
      hash = (53 * hash) + getV();
      hash = (37 * hash) + MAX_VID_FIELD_NUMBER;
      hash = (53 * hash) + getMaxVid();
      hash = (37 * hash) + N_FIELD_NUMBER;
      hash = (53 * hash) + getN();
      hash = (37 * hash) + CONTENTS_FIELD_NUMBER;
      hash = (53 * hash) + getContents().hashCode();
      hash = (37 * hash) + MESSAGE_UID_FIELD_NUMBER;
      hash = (53 * hash) + getMessageUid().hashCode();
      hash = (37 * hash) + FROM_BCUID_FIELD_NUMBER;
      hash = (53 * hash) + getFromBcuid().hashCode();
      hash = (37 * hash) + SIGN_FIELD_NUMBER;
      hash = (53 * hash) + getSign().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.brewchain.p22p.pbgens.P22P.PVBase prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PVBase}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.brewchain.p22p.pbgens.PVBase)
        org.fc.brewchain.p22p.pbgens.P22P.PVBaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PVBase_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PVBase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.brewchain.p22p.pbgens.P22P.PVBase.class, org.fc.brewchain.p22p.pbgens.P22P.PVBase.Builder.class);
      }

      // Construct using org.fc.brewchain.p22p.pbgens.P22P.PVBase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        state_ = 0;

        mType_ = 0;

        v_ = 0;

        maxVid_ = 0;

        n_ = 0;

        contents_ = com.google.protobuf.ByteString.EMPTY;

        messageUid_ = "";

        fromBcuid_ = "";

        sign_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PVBase_descriptor;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PVBase getDefaultInstanceForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.PVBase.getDefaultInstance();
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PVBase build() {
        org.fc.brewchain.p22p.pbgens.P22P.PVBase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PVBase buildPartial() {
        org.fc.brewchain.p22p.pbgens.P22P.PVBase result = new org.fc.brewchain.p22p.pbgens.P22P.PVBase(this);
        result.state_ = state_;
        result.mType_ = mType_;
        result.v_ = v_;
        result.maxVid_ = maxVid_;
        result.n_ = n_;
        result.contents_ = contents_;
        result.messageUid_ = messageUid_;
        result.fromBcuid_ = fromBcuid_;
        result.sign_ = sign_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.brewchain.p22p.pbgens.P22P.PVBase) {
          return mergeFrom((org.fc.brewchain.p22p.pbgens.P22P.PVBase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.brewchain.p22p.pbgens.P22P.PVBase other) {
        if (other == org.fc.brewchain.p22p.pbgens.P22P.PVBase.getDefaultInstance()) return this;
        if (other.state_ != 0) {
          setStateValue(other.getStateValue());
        }
        if (other.getMType() != 0) {
          setMType(other.getMType());
        }
        if (other.getV() != 0) {
          setV(other.getV());
        }
        if (other.getMaxVid() != 0) {
          setMaxVid(other.getMaxVid());
        }
        if (other.getN() != 0) {
          setN(other.getN());
        }
        if (other.getContents() != com.google.protobuf.ByteString.EMPTY) {
          setContents(other.getContents());
        }
        if (!other.getMessageUid().isEmpty()) {
          messageUid_ = other.messageUid_;
          onChanged();
        }
        if (!other.getFromBcuid().isEmpty()) {
          fromBcuid_ = other.fromBcuid_;
          onChanged();
        }
        if (!other.getSign().isEmpty()) {
          sign_ = other.sign_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.brewchain.p22p.pbgens.P22P.PVBase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.brewchain.p22p.pbgens.P22P.PVBase) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int state_ = 0;
      /**
       * <pre>
       *状态
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
       */
      public int getStateValue() {
        return state_;
      }
      /**
       * <pre>
       *状态
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
       */
      public Builder setStateValue(int value) {
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *状态
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PBFTStage getState() {
        org.fc.brewchain.p22p.pbgens.P22P.PBFTStage result = org.fc.brewchain.p22p.pbgens.P22P.PBFTStage.valueOf(state_);
        return result == null ? org.fc.brewchain.p22p.pbgens.P22P.PBFTStage.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *状态
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
       */
      public Builder setState(org.fc.brewchain.p22p.pbgens.P22P.PBFTStage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *状态
       * </pre>
       *
       * <code>.org.fc.brewchain.p22p.pbgens.PBFTStage state = 1;</code>
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }

      private int mType_ ;
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>uint32 m_type = 2;</code>
       */
      public int getMType() {
        return mType_;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>uint32 m_type = 2;</code>
       */
      public Builder setMType(int value) {
        
        mType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>uint32 m_type = 2;</code>
       */
      public Builder clearMType() {
        
        mType_ = 0;
        onChanged();
        return this;
      }

      private int v_ ;
      /**
       * <pre>
       *该消息类型对应的view_id序列
       * </pre>
       *
       * <code>uint32 v = 3;</code>
       */
      public int getV() {
        return v_;
      }
      /**
       * <pre>
       *该消息类型对应的view_id序列
       * </pre>
       *
       * <code>uint32 v = 3;</code>
       */
      public Builder setV(int value) {
        
        v_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该消息类型对应的view_id序列
       * </pre>
       *
       * <code>uint32 v = 3;</code>
       */
      public Builder clearV() {
        
        v_ = 0;
        onChanged();
        return this;
      }

      private int maxVid_ ;
      /**
       * <pre>
       *最大的id
       * </pre>
       *
       * <code>uint32 max_vid = 4;</code>
       */
      public int getMaxVid() {
        return maxVid_;
      }
      /**
       * <pre>
       *最大的id
       * </pre>
       *
       * <code>uint32 max_vid = 4;</code>
       */
      public Builder setMaxVid(int value) {
        
        maxVid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大的id
       * </pre>
       *
       * <code>uint32 max_vid = 4;</code>
       */
      public Builder clearMaxVid() {
        
        maxVid_ = 0;
        onChanged();
        return this;
      }

      private int n_ ;
      /**
       * <pre>
       * number
       * </pre>
       *
       * <code>uint32 n = 5;</code>
       */
      public int getN() {
        return n_;
      }
      /**
       * <pre>
       * number
       * </pre>
       *
       * <code>uint32 n = 5;</code>
       */
      public Builder setN(int value) {
        
        n_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * number
       * </pre>
       *
       * <code>uint32 n = 5;</code>
       */
      public Builder clearN() {
        
        n_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString contents_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes contents = 10;</code>
       */
      public com.google.protobuf.ByteString getContents() {
        return contents_;
      }
      /**
       * <code>bytes contents = 10;</code>
       */
      public Builder setContents(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        contents_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes contents = 10;</code>
       */
      public Builder clearContents() {
        
        contents_ = getDefaultInstance().getContents();
        onChanged();
        return this;
      }

      private java.lang.Object messageUid_ = "";
      /**
       * <pre>
       *消息的uuid
       * </pre>
       *
       * <code>string message_uid = 30;</code>
       */
      public java.lang.String getMessageUid() {
        java.lang.Object ref = messageUid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          messageUid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *消息的uuid
       * </pre>
       *
       * <code>string message_uid = 30;</code>
       */
      public com.google.protobuf.ByteString
          getMessageUidBytes() {
        java.lang.Object ref = messageUid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          messageUid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *消息的uuid
       * </pre>
       *
       * <code>string message_uid = 30;</code>
       */
      public Builder setMessageUid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        messageUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息的uuid
       * </pre>
       *
       * <code>string message_uid = 30;</code>
       */
      public Builder clearMessageUid() {
        
        messageUid_ = getDefaultInstance().getMessageUid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息的uuid
       * </pre>
       *
       * <code>string message_uid = 30;</code>
       */
      public Builder setMessageUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        messageUid_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fromBcuid_ = "";
      /**
       * <pre>
       *从哪个节点名称来的
       * </pre>
       *
       * <code>string from_bcuid = 31;</code>
       */
      public java.lang.String getFromBcuid() {
        java.lang.Object ref = fromBcuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fromBcuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *从哪个节点名称来的
       * </pre>
       *
       * <code>string from_bcuid = 31;</code>
       */
      public com.google.protobuf.ByteString
          getFromBcuidBytes() {
        java.lang.Object ref = fromBcuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fromBcuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *从哪个节点名称来的
       * </pre>
       *
       * <code>string from_bcuid = 31;</code>
       */
      public Builder setFromBcuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fromBcuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *从哪个节点名称来的
       * </pre>
       *
       * <code>string from_bcuid = 31;</code>
       */
      public Builder clearFromBcuid() {
        
        fromBcuid_ = getDefaultInstance().getFromBcuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *从哪个节点名称来的
       * </pre>
       *
       * <code>string from_bcuid = 31;</code>
       */
      public Builder setFromBcuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fromBcuid_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sign_ = "";
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public java.lang.String getSign() {
        java.lang.Object ref = sign_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sign_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public com.google.protobuf.ByteString
          getSignBytes() {
        java.lang.Object ref = sign_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sign_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSign(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sign_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder clearSign() {
        
        sign_ = getDefaultInstance().getSign();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对上述数据的签名结果
       * </pre>
       *
       * <code>string sign = 100;</code>
       */
      public Builder setSignBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sign_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.fc.brewchain.p22p.pbgens.PVBase)
    }

    // @@protoc_insertion_point(class_scope:org.fc.brewchain.p22p.pbgens.PVBase)
    private static final org.fc.brewchain.p22p.pbgens.P22P.PVBase DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.brewchain.p22p.pbgens.P22P.PVBase();
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PVBase getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PVBase>
        PARSER = new com.google.protobuf.AbstractParser<PVBase>() {
      public PVBase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PVBase(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PVBase> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PVBase> getParserForType() {
      return PARSER;
    }

    public org.fc.brewchain.p22p.pbgens.P22P.PVBase getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PBVoteNodeIdxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.brewchain.p22p.pbgens.PBVoteNodeIdx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> 
        getNodesList();
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index);
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    int getNodesCount();
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <pre>
     *所有节点的编码信息
     * </pre>
     *
     * <code>string node_bits_enc = 2;</code>
     */
    java.lang.String getNodeBitsEnc();
    /**
     * <pre>
     *所有节点的编码信息
     * </pre>
     *
     * <code>string node_bits_enc = 2;</code>
     */
    com.google.protobuf.ByteString
        getNodeBitsEncBytes();
  }
  /**
   * <pre>
   *投票决定节点的idx,80%通过才行
   * </pre>
   *
   * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PBVoteNodeIdx}
   */
  public  static final class PBVoteNodeIdx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.brewchain.p22p.pbgens.PBVoteNodeIdx)
      PBVoteNodeIdxOrBuilder {
    // Use PBVoteNodeIdx.newBuilder() to construct.
    private PBVoteNodeIdx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PBVoteNodeIdx() {
      nodes_ = java.util.Collections.emptyList();
      nodeBitsEnc_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PBVoteNodeIdx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodes_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(
                  input.readMessage(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeBitsEnc_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx.class, org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx.Builder.class);
    }

    private int bitField0_;
    public static final int NODES_FIELD_NUMBER = 1;
    private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> nodes_;
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     *所有节点的信息
     * </pre>
     *
     * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
     */
    public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int NODE_BITS_ENC_FIELD_NUMBER = 2;
    private volatile java.lang.Object nodeBitsEnc_;
    /**
     * <pre>
     *所有节点的编码信息
     * </pre>
     *
     * <code>string node_bits_enc = 2;</code>
     */
    public java.lang.String getNodeBitsEnc() {
      java.lang.Object ref = nodeBitsEnc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeBitsEnc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *所有节点的编码信息
     * </pre>
     *
     * <code>string node_bits_enc = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNodeBitsEncBytes() {
      java.lang.Object ref = nodeBitsEnc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeBitsEnc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(1, nodes_.get(i));
      }
      if (!getNodeBitsEncBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nodeBitsEnc_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodes_.get(i));
      }
      if (!getNodeBitsEncBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nodeBitsEnc_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx)) {
        return super.equals(obj);
      }
      org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx other = (org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx) obj;

      boolean result = true;
      result = result && getNodesList()
          .equals(other.getNodesList());
      result = result && getNodeBitsEnc()
          .equals(other.getNodeBitsEnc());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (37 * hash) + NODE_BITS_ENC_FIELD_NUMBER;
      hash = (53 * hash) + getNodeBitsEnc().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *投票决定节点的idx,80%通过才行
     * </pre>
     *
     * Protobuf type {@code org.fc.brewchain.p22p.pbgens.PBVoteNodeIdx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.brewchain.p22p.pbgens.PBVoteNodeIdx)
        org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx.class, org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx.Builder.class);
      }

      // Construct using org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        nodeBitsEnc_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_descriptor;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx getDefaultInstanceForType() {
        return org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx.getDefaultInstance();
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx build() {
        org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx buildPartial() {
        org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx result = new org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        result.nodeBitsEnc_ = nodeBitsEnc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx) {
          return mergeFrom((org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx other) {
        if (other == org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx.getDefaultInstance()) return this;
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        if (!other.getNodeBitsEnc().isEmpty()) {
          nodeBitsEnc_ = other.nodeBitsEnc_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = new java.util.ArrayList<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> nodesBuilder_;

      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder setNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder setNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addNodes(org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addNodes(
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addNodes(
          int index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public java.util.List<? extends org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *所有节点的信息
       * </pre>
       *
       * <code>repeated .org.fc.brewchain.p22p.pbgens.PMNodeInfo nodes = 1;</code>
       */
      public java.util.List<org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfo.Builder, org.fc.brewchain.p22p.pbgens.P22P.PMNodeInfoOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private java.lang.Object nodeBitsEnc_ = "";
      /**
       * <pre>
       *所有节点的编码信息
       * </pre>
       *
       * <code>string node_bits_enc = 2;</code>
       */
      public java.lang.String getNodeBitsEnc() {
        java.lang.Object ref = nodeBitsEnc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeBitsEnc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *所有节点的编码信息
       * </pre>
       *
       * <code>string node_bits_enc = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNodeBitsEncBytes() {
        java.lang.Object ref = nodeBitsEnc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeBitsEnc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *所有节点的编码信息
       * </pre>
       *
       * <code>string node_bits_enc = 2;</code>
       */
      public Builder setNodeBitsEnc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeBitsEnc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所有节点的编码信息
       * </pre>
       *
       * <code>string node_bits_enc = 2;</code>
       */
      public Builder clearNodeBitsEnc() {
        
        nodeBitsEnc_ = getDefaultInstance().getNodeBitsEnc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所有节点的编码信息
       * </pre>
       *
       * <code>string node_bits_enc = 2;</code>
       */
      public Builder setNodeBitsEncBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeBitsEnc_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.fc.brewchain.p22p.pbgens.PBVoteNodeIdx)
    }

    // @@protoc_insertion_point(class_scope:org.fc.brewchain.p22p.pbgens.PBVoteNodeIdx)
    private static final org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx();
    }

    public static org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PBVoteNodeIdx>
        PARSER = new com.google.protobuf.AbstractParser<PBVoteNodeIdx>() {
      public PBVoteNodeIdx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PBVoteNodeIdx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PBVoteNodeIdx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PBVoteNodeIdx> getParserForType() {
      return PARSER;
    }

    public org.fc.brewchain.p22p.pbgens.P22P.PBVoteNodeIdx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_brewchain_p22p_pbgens_PVBase_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_brewchain_p22p_pbgens_PVBase_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\np22p.proto\022\034org.fc.brewchain.p22p.pbge" +
      "ns\032\031google/protobuf/any.proto\"\201\002\n\nPMNode" +
      "Info\022\021\n\tnode_name\030\001 \001(\t\022\020\n\010protocol\030\002 \001(" +
      "\t\022\017\n\007address\030\003 \001(\t\022\014\n\004port\030\004 \001(\005\022\024\n\014star" +
      "tup_time\030\005 \001(\003\022\017\n\007pub_key\030\006 \001(\t\022\r\n\005bcuid" +
      "\030\007 \001(\t\022\024\n\014try_node_idx\030\010 \001(\005\022\017\n\007pri_key\030" +
      "\t \001(\t\022\020\n\010node_idx\030\n \001(\005\022\017\n\007recv_cc\030\013 \001(\003" +
      "\022\017\n\007send_cc\030\014 \001(\003\022\020\n\010block_cc\030\r \001(\003\022\014\n\004s" +
      "ign\030d \001(\t\"\261\001\n\006PSJoin\0229\n\007my_info\030\001 \001(\0132(." +
      "org.fc.brewchain.p22p.pbgens.PMNodeInfo\022",
      ":\n\002op\030\002 \001(\0162..org.fc.brewchain.p22p.pbge" +
      "ns.PSJoin.Operation\"0\n\tOperation\022\021\n\rMANU" +
      "_DISCOVER\020\000\022\020\n\014NODE_CONNECT\020\001\"\263\001\n\010PRetJo" +
      "in\022\020\n\010ret_code\030\001 \001(\005\022\023\n\013ret_message\030\002 \001(" +
      "\t\0229\n\007my_info\030\003 \001(\0132(.org.fc.brewchain.p2" +
      "2p.pbgens.PMNodeInfo\0227\n\005nodes\030\004 \003(\0132(.or" +
      "g.fc.brewchain.p22p.pbgens.PMNodeInfo\022\014\n" +
      "\004sign\030d \001(\t\"\037\n\nPSNodeInfo\022\021\n\treq_token\030\001" +
      " \001(\t\"\363\001\n\014PRetNodeInfo\022\020\n\010ret_code\030\001 \001(\005\022" +
      "\023\n\013ret_message\030\002 \001(\t\0229\n\007current\030\004 \001(\0132(.",
      "org.fc.brewchain.p22p.pbgens.PMNodeInfo\022" +
      ":\n\010pendings\030\005 \003(\0132(.org.fc.brewchain.p22" +
      "p.pbgens.PMNodeInfo\0227\n\005nodes\030\006 \003(\0132(.org" +
      ".fc.brewchain.p22p.pbgens.PMNodeInfo\022\014\n\004" +
      "sign\030d \001(\t\"\221\001\n\rPBSwitchNodes\0227\n\005nodes\030\001 " +
      "\003(\0132(.org.fc.brewchain.p22p.pbgens.PMNod" +
      "eInfo\0229\n\007my_info\030\002 \001(\0132(.org.fc.brewchai" +
      "n.p22p.pbgens.PMNodeInfo\022\014\n\004sign\030d \001(\t\"\300" +
      "\001\n\006PVBase\0226\n\005state\030\001 \001(\0162\'.org.fc.brewch" +
      "ain.p22p.pbgens.PBFTStage\022\016\n\006m_type\030\002 \001(",
      "\r\022\t\n\001v\030\003 \001(\r\022\017\n\007max_vid\030\004 \001(\r\022\t\n\001n\030\005 \001(\r" +
      "\022\020\n\010contents\030\n \001(\014\022\023\n\013message_uid\030\036 \001(\t\022" +
      "\022\n\nfrom_bcuid\030\037 \001(\t\022\014\n\004sign\030d \001(\t\"_\n\rPBV" +
      "oteNodeIdx\0227\n\005nodes\030\001 \003(\0132(.org.fc.brewc" +
      "hain.p22p.pbgens.PMNodeInfo\022\025\n\rnode_bits" +
      "_enc\030\002 \001(\t*\022\n\007PModule\022\007\n\003PZP\020\000*@\n\010PComma" +
      "nd\022\007\n\003JIN\020\000\022\007\n\003SWX\020\001\022\007\n\003SET\020\002\022\007\n\003INF\020\003\022\007" +
      "\n\003VOT\020\004\022\007\n\003HBT\020\n*@\n\tPBFTStage\022\017\n\013PRE_PRE" +
      "PARE\020\000\022\013\n\007PREPARE\020\001\022\n\n\006COMMIT\020\002\022\t\n\005REPLY" +
      "\020\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_brewchain_p22p_pbgens_PMNodeInfo_descriptor,
        new java.lang.String[] { "NodeName", "Protocol", "Address", "Port", "StartupTime", "PubKey", "Bcuid", "TryNodeIdx", "PriKey", "NodeIdx", "RecvCc", "SendCc", "BlockCc", "Sign", });
    internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_brewchain_p22p_pbgens_PSJoin_descriptor,
        new java.lang.String[] { "MyInfo", "Op", });
    internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_brewchain_p22p_pbgens_PRetJoin_descriptor,
        new java.lang.String[] { "RetCode", "RetMessage", "MyInfo", "Nodes", "Sign", });
    internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_brewchain_p22p_pbgens_PSNodeInfo_descriptor,
        new java.lang.String[] { "ReqToken", });
    internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_brewchain_p22p_pbgens_PRetNodeInfo_descriptor,
        new java.lang.String[] { "RetCode", "RetMessage", "Current", "Pendings", "Nodes", "Sign", });
    internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_brewchain_p22p_pbgens_PBSwitchNodes_descriptor,
        new java.lang.String[] { "Nodes", "MyInfo", "Sign", });
    internal_static_org_fc_brewchain_p22p_pbgens_PVBase_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_org_fc_brewchain_p22p_pbgens_PVBase_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_brewchain_p22p_pbgens_PVBase_descriptor,
        new java.lang.String[] { "State", "MType", "V", "MaxVid", "N", "Contents", "MessageUid", "FromBcuid", "Sign", });
    internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_brewchain_p22p_pbgens_PBVoteNodeIdx_descriptor,
        new java.lang.String[] { "Nodes", "NodeBitsEnc", });
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
