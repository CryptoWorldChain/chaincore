syntax = "proto3";

package org.fc.brewchain.p22p.pbgens;
import "google/protobuf/any.proto";

enum PModule {
	PZP = 0;
};
enum PCommand {
	JIN = 0; //申请加入节点集群
	SWX = 1; //获取节点的拓扑
	SET = 2; //更新节点信息
	INF = 3;//获取当前节点信息
	VOT = 4;//PBFT投票
	
	
	HBT = 10;//HeartBeat!检查心跳
};

message PMNodeInfo{
	string node_name = 1;//节点
	string protocol = 2;//节点链接支持的协议类型，tcp，http/https，udp，mq……
	string address = 3;//地址
	int32 port = 4;//端口
	int64 startup_time = 5;//启动时间
	string pub_key = 6;//该节点的公钥
	string bcuid = 7;//节点的唯一ID
	int32 try_node_idx = 8;//节点的随机id
	string pri_key = 9;//私钥，记得不要再在全网广播
	int32 node_idx = 10;//全网确定之后的节点id
	int64 recv_cc = 11;//总收到多少数据
	int64 send_cc = 12;//总发送多少数据
	int64 block_cc = 13;//总产生了多少个区块！
	
	string sign = 100;//对上述数据的签名结果
}

message PSJoin{//加入
	PMNodeInfo  my_info = 1;
	enum Operation{
		MANU_DISCOVER = 0;//手动添加
		NODE_CONNECT = 1;//节点请求连接
	}
	Operation op = 2;//操作类型
}

message PRetJoin{//加入的返回信息
	int32 ret_code = 1;//返回
	string ret_message = 2;//返回信息

	PMNodeInfo my_info = 3;//交换一下我自己的节点信息
	repeated PMNodeInfo nodes = 4;//交换一下我知道的节点信息
	
	string sign = 100;//对上述数据的签名结果
}


message PSNodeInfo{//加入
	string req_token = 1;//是否获取拓扑信息
}

message PRetNodeInfo{//加入的返回信息
	int32 ret_code = 1;//返回
	string ret_message = 2;//返回信息

	PMNodeInfo current = 4;//本节点信息
	
	repeated PMNodeInfo pendings = 5;//交换一下我知道的节点信息
	
	repeated PMNodeInfo nodes = 6;//交换一下我知道的节点信息
	
	string sign = 100;//对上述数据的签名结果
}

message PBSwitchNodes{	//交换我所知道的节点信息
	repeated PMNodeInfo  nodes = 1;//所有节点的信息
	PMNodeInfo my_info = 2;
	string sign = 100;//对上述数据的签名结果
}

enum PBFTStage{
	PRE_PREPARE = 0;
	PREPARE = 1;
	COMMIT = 2;
	REPLY = 3;
}

message PVBase{
	PBFTStage state = 1 ;//状态
	uint32 m_type = 2;//消息类型
	uint32 v = 3;//该消息类型对应的view_id序列
	uint32 max_vid = 4;//最大的id
	uint32 n = 5;// number
	bytes contents = 10;
	
	string message_uid = 30;//消息的uuid
	string from_bcuid = 31;//从哪个节点名称来的
	string sign = 100; //对上述数据的签名结果
}

message PBVoteNodeIdx{//投票决定节点的idx,80%通过才行
	repeated PMNodeInfo nodes = 1;//所有节点的信息
	string node_bits_enc = 2;//所有节点的编码信息
}


